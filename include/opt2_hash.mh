#define OPT2_HASH_MAP(start, entry)	\
start(/*size*/ 369, /*lcap*/ 8)	\
entry(M4ne|(M4zero_more<<16),	2|(M4two_drop<<16)|(M4false<<32),	256)	\
entry(M4abs|(M4abs<<16),	1|(M4abs<<16),	257)	\
entry(M4three|(M4lshift<<16),	1|(M4eight_times<<16),	258)	\
entry(M4less|(M4invert<<16),	1|(M4more_equal<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4zero|(M4xor<<16),	0,	-2)	\
entry(M4minus_one|(M4xor<<16),	1|(M4invert<<16),	274)	\
entry(M4swap|(M4rot<<16),	1|(M4flip<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4zero_equal|(M4_while0_<<16),	1|(M4_while_<<16),	266)	\
entry(M4two|(M4two_roll<<16),	1|(M4two_rot<<16),	267)	\
entry(M4one_plus|(M4one_plus<<16),	1|(M4two_plus<<16),	268)	\
entry(M4xor|(M4invert<<16),	2|(M4invert<<16)|(M4xor<<32),	-2)	\
entry(M4two_sm_div|(M4two_sm_div<<16),	1|(M4four_sm_div<<16),	-2)	\
entry(M4zero_more|(M4zero_less_equal<<16),	2|(M4drop<<16)|(M4true<<32),	271)	\
entry(0,	0,	-1)	\
entry(M4dup|(M4more_equal<<16),	2|(M4drop<<16)|(M4true<<32),	273)	\
entry(M4dup|(M4_if_<<16),	1|(M4_q_if_<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4negate|(M4invert<<16),	1|(M4one_minus<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4less_equal|(M4zero_ne<<16),	1|(M4less_equal<<16),	-2)	\
entry(M4minus_one|(M4_until0_<<16),	1|(M4_again_<<16),	-2)	\
entry(M4two_swap|(M4two_drop<<16),	1|(M4two_nip<<16),	-2)	\
entry(M4one_minus|(M4two_plus<<16),	1|(M4one_plus<<16),	-2)	\
entry(M4eight|(M4plus<<16),	1|(M4eight_plus<<16),	282)	\
entry(M4zero_equal|(M4_while_<<16),	1|(M4_while0_<<16),	294)	\
entry(M4zero_less|(M4zero_more<<16),	2|(M4drop<<16)|(M4false<<32),	-2)	\
entry(M4one_plus|(M4one_minus<<16),	0,	292)	\
entry(M4one|(M4times<<16),	0,	286)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4one|(M4div_mod<<16),	2|(M4drop<<16)|(M4zero<<32),	290)	\
entry(M4one|(M4rshift<<16),	1|(M4two_div<<16),	291)	\
entry(M4zero_equal|(M4zero_equal<<16),	1|(M4zero_ne<<16),	-2)	\
entry(M4zero_less|(M4zero_equal<<16),	1|(M4zero_more_equal<<16),	293)	\
entry(M4four_times|(M4two_times<<16),	1|(M4eight_times<<16),	348)	\
entry(M4two_dup|(M4drop<<16),	1|(M4over<<16),	306)	\
entry(M4dup|(M4min<<16),	0,	-2)	\
entry(M4dup|(M4less<<16),	2|(M4drop<<16)|(M4false<<32),	297)	\
entry(M4two_swap|(M4two_swap<<16),	0,	298)	\
entry(M4one|(M4plus<<16),	1|(M4one_plus<<16),	299)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4minus_one|(M4or<<16),	2|(M4drop<<16)|(M4minus_one<<32),	311)	\
entry(M4zero|(M4or<<16),	0,	336)	\
entry(M4minus_one|(M4minus<<16),	1|(M4one_plus<<16),	304)	\
entry(M4zero|(M4minus<<16),	0,	-2)	\
entry(M4zero_more_equal|(M4zero_more<<16),	2|(M4drop<<16)|(M4false<<32),	-2)	\
entry(M4zero|(M4minus_roll<<16),	0,	329)	\
entry(M4more|(M4zero_less<<16),	1|(M4more<<16),	313)	\
entry(M4equal|(M4zero_less<<16),	1|(M4equal<<16),	-2)	\
entry(M4zero_less_equal|(M4invert<<16),	1|(M4zero_more<<16),	310)	\
entry(M4flip|(M4flip<<16),	0,	-2)	\
entry(M4zero_equal|(M4_until_<<16),	1|(M4_until0_<<16),	312)	\
entry(M4ne|(M4zero_equal<<16),	1|(M4equal<<16),	334)	\
entry(M4tuck|(M4nip<<16),	2|(M4nip<<16)|(M4dup<<32),	-2)	\
entry(M4two_sm_div|(M4four_sm_div<<16),	1|(M4eight_sm_div<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4zero|(M4u_less_equal<<16),	1|(M4zero_equal<<16),	331)	\
entry(M4more_equal|(M4zero_more<<16),	2|(M4two_drop<<16)|(M4false<<32),	-2)	\
entry(M4minus_one|(M4mod<<16),	1|(M4div<<16),	319)	\
entry(M4four|(M4plus<<16),	1|(M4four_plus<<16),	320)	\
entry(M4over|(M4drop<<16),	0,	-2)	\
entry(M4tuck|(M4drop<<16),	1|(M4swap<<16),	-2)	\
entry(M4one_minus|(M4invert<<16),	1|(M4negate<<16),	323)	\
entry(M4zero|(M4times<<16),	2|(M4drop<<16)|(M4zero<<32),	324)	\
entry(M4minus_one|(M4times<<16),	1|(M4negate<<16),	325)	\
entry(M4dup|(M4tuck<<16),	2|(M4dup<<16)|(M4dup<<32),	-2)	\
entry(M4zero|(M4_until_<<16),	1|(M4_again_<<16),	338)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4dup|(M4equal<<16),	2|(M4drop<<16)|(M4true<<32),	330)	\
entry(0,	0,	-1)	\
entry(M4one|(M4_until0_<<16),	1|(M4_again_<<16),	347)	\
entry(M4two|(M4roll<<16),	1|(M4rot<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4zero_less_equal|(M4zero_more_equal<<16),	1|(M4zero_more<<16),	-2)	\
entry(M4int_aligned|(M4aligned<<16),	1|(M4aligned<<16),	-2)	\
entry(M4short_aligned|(M4aligned<<16),	1|(M4aligned<<16),	337)	\
entry(M4two_times|(M4two_times<<16),	1|(M4four_times<<16),	-2)	\
entry(M4int_align|(M4align<<16),	1|(M4align<<16),	339)	\
entry(M4swap|(M4sub<<16),	1|(M4minus<<16),	-2)	\
entry(M4zero_ne|(M4zero_less_equal<<16),	2|(M4drop<<16)|(M4true<<32),	-2)	\
entry(M4more_equal|(M4zero_less<<16),	1|(M4more_equal<<16),	351)	\
entry(M4two_r_fetch|(M4two_drop<<16),	0,	-2)	\
entry(M4two|(M4lshift<<16),	1|(M4four_times<<16),	344)	\
entry(0,	0,	-1)	\
entry(M4zero_more_equal|(M4zero_less<<16),	1|(M4zero_less<<16),	355)	\
entry(M4negate|(M4_if_<<16),	1|(M4_if_<<16),	-2)	\
entry(M4more|(M4zero_more<<16),	2|(M4two_drop<<16)|(M4false<<32),	-2)	\
entry(M4less_equal|(M4zero_equal<<16),	1|(M4more<<16),	349)	\
entry(M4zero_less_equal|(M4zero_less_equal<<16),	2|(M4drop<<16)|(M4true<<32),	359)	\
entry(M4two_dup|(M4nip<<16),	1|(M4dup<<16),	-2)	\
entry(M4to_r|(M4r_from<<16),	0,	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4dup|(M4less_equal<<16),	2|(M4drop<<16)|(M4true<<32),	-2)	\
entry(M4one|(M4mod<<16),	0,	371)	\
entry(M4four_sm_div|(M4two_sm_div<<16),	1|(M4four_sm_div<<16),	364)	\
entry(0,	0,	-1)	\
entry(M4zero_more|(M4invert<<16),	1|(M4zero_less_equal<<16),	-2)	\
entry(M4minus_one|(M4div<<16),	1|(M4negate<<16),	360)	\
entry(M4one|(M4minus_roll<<16),	1|(M4swap<<16),	361)	\
entry(0,	0,	-1)	\
entry(M4one|(M4minus<<16),	1|(M4one_minus<<16),	363)	\
entry(M4zero|(M4u_more_equal<<16),	2|(M4drop<<16)|(M4true<<32),	-2)	\
entry(0,	0,	-1)	\
entry(M4zero_less|(M4zero_ne<<16),	1|(M4zero_less<<16),	-2)	\
entry(M4zero_equal|(M4zero_ne<<16),	1|(M4zero_equal<<16),	367)	\
entry(M4minus_one|(M4plus<<16),	1|(M4one_minus<<16),	-2)	\
entry(M4zero|(M4plus<<16),	0,	369)	\
entry(M4zero_ne|(M4_if_<<16),	1|(M4_if_<<16),	370)	\
entry(0,	0,	-1)	\
entry(M4zero_less|(M4zero_less<<16),	1|(M4zero_less<<16),	372)	\
entry(M4four|(M4times<<16),	1|(M4four_times<<16),	373)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4one_plus|(M4negate<<16),	1|(M4invert<<16),	-2)	\
entry(M4minus_one|(M4div_mod<<16),	2|(M4negate<<16)|(M4zero<<32),	384)	\
entry(M4zero|(M4ne<<16),	1|(M4zero_ne<<16),	396)	\
entry(0,	0,	-1)	\
entry(M4swap|(M4two_dup<<16),	2|(M4tuck<<16)|(M4over<<32),	-2)	\
entry(M4two_dup|(M4two_nip<<16),	0,	381)	\
entry(M4short_aligned|(M4short_aligned<<16),	1|(M4short_aligned<<16),	-2)	\
entry(M4int_aligned|(M4short_aligned<<16),	1|(M4int_aligned<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4less|(M4zero_less<<16),	1|(M4less<<16),	-2)	\
entry(M4ne|(M4zero_less_equal<<16),	2|(M4two_drop<<16)|(M4true<<32),	-2)	\
entry(M4two_minus|(M4two_plus<<16),	0,	-2)	\
entry(0,	0,	-1)	\
entry(M4one_plus|(M4two_minus<<16),	1|(M4one_minus<<16),	389)	\
entry(0,	0,	-1)	\
entry(M4two|(M4minus_roll<<16),	1|(M4minus_rot<<16),	402)	\
entry(M4trail|(M4rot<<16),	1|(M4over<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4negate|(M4zero_ne<<16),	1|(M4zero_ne<<16),	401)	\
entry(M4zero_more|(M4zero_more<<16),	2|(M4drop<<16)|(M4false<<32),	-2)	\
entry(M4zero_equal|(M4zero_more_equal<<16),	1|(M4zero_ne<<16),	398)	\
entry(M4zero_less|(M4zero_more_equal<<16),	1|(M4zero_more_equal<<16),	399)	\
entry(M4dup|(M4u_less<<16),	2|(M4drop<<16)|(M4false<<32),	400)	\
entry(M4dup|(M4times<<16),	1|(M4squared<<16),	-2)	\
entry(M4two_dup|(M4two_to_r<<16),	1|(M4two_dup_two_to_r<<16),	420)	\
entry(M4ne|(M4zero_more_equal<<16),	1|(M4equal<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4swap|(M4less_equal<<16),	1|(M4more_equal<<16),	-2)	\
entry(M4one|(M4minus_two_roll<<16),	1|(M4two_swap<<16),	418)	\
entry(0,	0,	-1)	\
entry(M4u_less|(M4invert<<16),	1|(M4u_more_equal<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4less|(M4zero_ne<<16),	1|(M4less<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4negate|(M4squared<<16),	1|(M4squared<<16),	-2)	\
entry(M4zero_less|(M4zero_less_equal<<16),	2|(M4drop<<16)|(M4true<<32),	414)	\
entry(M4zero|(M4equal<<16),	1|(M4zero_equal<<16),	426)	\
entry(M4dup|(M4_while0_<<16),	1|(M4_q_while0_<<16),	416)	\
entry(M4zero_more_equal|(M4zero_more_equal<<16),	1|(M4zero_less<<16),	417)	\
entry(M4div_mod|(M4drop<<16),	1|(M4div<<16),	454)	\
entry(M4one|(M4roll<<16),	1|(M4swap<<16),	430)	\
entry(M4two_r_fetch|(M4nip<<16),	1|(M4r_fetch<<16),	445)	\
entry(M4zero_ne|(M4zero_ne<<16),	1|(M4zero_ne<<16),	421)	\
entry(M4swap|(M4drop<<16),	1|(M4nip<<16),	422)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4short_align|(M4short_align<<16),	1|(M4short_align<<16),	-2)	\
entry(M4abs|(M4zero_ne<<16),	1|(M4zero_ne<<16),	-2)	\
entry(M4two_plus|(M4two_minus<<16),	0,	427)	\
entry(M4two_dup|(M4two_drop<<16),	0,	428)	\
entry(M4more_equal|(M4zero_more_equal<<16),	1|(M4less<<16),	429)	\
entry(M4zero_less_equal|(M4zero_ne<<16),	1|(M4zero_less<<16),	-2)	\
entry(M4two_to_r|(M4two_r_from<<16),	0,	464)	\
entry(M4zero_more_equal|(M4zero_less_equal<<16),	2|(M4drop<<16)|(M4true<<32),	-2)	\
entry(M4dup|(M4_while_<<16),	1|(M4_q_while_<<16),	-2)	\
entry(M4one|(M4pick<<16),	1|(M4over<<16),	-2)	\
entry(M4swap|(M4tuck<<16),	1|(M4over<<16),	-2)	\
entry(M4zero_less_equal|(M4zero_less<<16),	1|(M4zero_less<<16),	436)	\
entry(0,	0,	-1)	\
entry(M4zero|(M4less_equal<<16),	1|(M4zero_less_equal<<16),	465)	\
entry(M4equal|(M4invert<<16),	1|(M4ne<<16),	450)	\
entry(M4zero_equal|(M4_if_<<16),	1|(M4_if0_<<16),	440)	\
entry(M4two_r_from|(M4two_drop<<16),	1|(M4two_r_from_two_drop<<16),	441)	\
entry(M4invert|(M4invert<<16),	0,	-2)	\
entry(M4abs|(M4squared<<16),	1|(M4squared<<16),	-2)	\
entry(M4more_equal|(M4zero_less_equal<<16),	2|(M4two_drop<<16)|(M4true<<32),	444)	\
entry(M4short_align|(M4align<<16),	1|(M4align<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4zero|(M4two_roll<<16),	0,	469)	\
entry(M4four_plus|(M4two_minus<<16),	1|(M4two_plus<<16),	448)	\
entry(M4negate|(M4negate<<16),	0,	-2)	\
entry(M4align|(M4short_align<<16),	1|(M4align<<16),	-2)	\
entry(M4aligned|(M4short_aligned<<16),	1|(M4aligned<<16),	495)	\
entry(M4zero|(M4more_equal<<16),	1|(M4zero_more_equal<<16),	-2)	\
entry(M4two|(M4plus<<16),	1|(M4two_plus<<16),	453)	\
entry(M4u_less_equal|(M4invert<<16),	1|(M4u_more<<16),	-2)	\
entry(M4u_more_equal|(M4invert<<16),	1|(M4u_less<<16),	455)	\
entry(0,	0,	-1)	\
entry(M4two_swap|(M4two_nip<<16),	1|(M4two_drop<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4i_plus|(M4r_store<<16),	1|(M4r_plus<<16),	-2)	\
entry(M4zero|(M4minus_two_roll<<16),	0,	461)	\
entry(M4zero|(M4more<<16),	1|(M4zero_more<<16),	480)	\
entry(M4more|(M4zero_more_equal<<16),	1|(M4less_equal<<16),	-2)	\
entry(M4less|(M4zero_equal<<16),	1|(M4more_equal<<16),	479)	\
entry(M4zero_ne|(M4_while_<<16),	1|(M4_while_<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4align|(M4int_align<<16),	1|(M4align<<16),	467)	\
entry(M4more_equal|(M4invert<<16),	1|(M4less<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4align|(M4align<<16),	1|(M4align<<16),	470)	\
entry(M4zero_ne|(M4zero_more<<16),	2|(M4drop<<16)|(M4false<<32),	471)	\
entry(M4zero_more_equal|(M4invert<<16),	1|(M4zero_less<<16),	472)	\
entry(M4two_plus|(M4two_plus<<16),	1|(M4four_plus<<16),	-2)	\
entry(M4div_mod|(M4nip<<16),	1|(M4mod<<16),	474)	\
entry(M4two_times|(M4four_times<<16),	1|(M4eight_times<<16),	-2)	\
entry(M4zero_less_equal|(M4zero_more<<16),	2|(M4drop<<16)|(M4false<<32),	481)	\
entry(M4two|(M4div<<16),	1|(M4two_sm_div<<16),	477)	\
entry(M4more|(M4zero_less_equal<<16),	2|(M4two_drop<<16)|(M4true<<32),	478)	\
entry(M4equal|(M4zero_less_equal<<16),	2|(M4two_drop<<16)|(M4true<<32),	-2)	\
entry(M4four_div|(M4two_div<<16),	1|(M4four_div<<16),	-2)	\
entry(M4abs|(M4zero_equal<<16),	1|(M4zero_equal<<16),	-2)	\
entry(M4minus_one|(M4and<<16),	0,	491)	\
entry(M4zero|(M4and<<16),	2|(M4drop<<16)|(M4zero<<32),	-2)	\
entry(M4dup|(M4minus<<16),	2|(M4drop<<16)|(M4zero<<32),	499)	\
entry(M4one|(M4two_roll<<16),	1|(M4two_swap<<16),	492)	\
entry(M4less_equal|(M4zero_less_equal<<16),	2|(M4two_drop<<16)|(M4true<<32),	-2)	\
entry(0,	0,	-1)	\
entry(M4zero|(M4pick<<16),	1|(M4dup<<16),	488)	\
entry(M4zero_equal|(M4_if0_<<16),	1|(M4_if_<<16),	510)	\
entry(M4ne|(M4invert<<16),	1|(M4equal<<16),	-2)	\
entry(M4dup|(M4mod<<16),	2|(M4drop<<16)|(M4zero<<32),	-2)	\
entry(M4zero|(M4lshift<<16),	0,	507)	\
entry(M4negate|(M4plus<<16),	1|(M4minus<<16),	493)	\
entry(M4zero_ne|(M4zero_equal<<16),	1|(M4zero_equal<<16),	494)	\
entry(M4over|(M4rot<<16),	2|(M4swap<<16)|(M4dup<<32),	-2)	\
entry(M4zero|(M4u_more<<16),	1|(M4zero_ne<<16),	496)	\
entry(0,	0,	-1)	\
entry(M4zero_ne|(M4_until_<<16),	1|(M4_until_<<16),	-2)	\
entry(M4one_minus|(M4one_minus<<16),	1|(M4two_minus<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4minus|(M4negate<<16),	1|(M4sub<<16),	501)	\
entry(M4zero_less|(M4invert<<16),	1|(M4zero_more_equal<<16),	264)	\
entry(M4zero_equal|(M4invert<<16),	1|(M4zero_ne<<16),	269)	\
entry(M4u_more|(M4invert<<16),	1|(M4u_less_equal<<16),	504)	\
entry(M4zero|(M4roll<<16),	0,	505)	\
entry(M4dup|(M4or<<16),	0,	-2)	\
entry(0,	0,	-1)	\
entry(M4zero|(M4less<<16),	1|(M4zero_less<<16),	-2)	\
entry(M4dup|(M4rot<<16),	2|(M4dup<<16)|(M4flip<<32),	-2)	\
entry(0,	0,	-1)	\
entry(M4zero_more|(M4zero_ne<<16),	1|(M4zero_more<<16),	-2)	\
entry(M4flip|(M4rot<<16),	2|(M4rot<<16)|(M4swap<<32),	-2)	\
entry(M4i|(M4drop<<16),	0,	-2)	\
entry(M4eight|(M4div<<16),	1|(M4eight_sm_div<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4more_equal|(M4zero_equal<<16),	1|(M4less<<16),	-2)	\
entry(M4over|(M4minus<<16),	2|(M4trail<<16)|(M4sub<<32),	511)	\
entry(0,	0,	-1)	\
entry(M4negate|(M4_if0_<<16),	1|(M4_if0_<<16),	-2)	\
entry(M4zero_more_equal|(M4zero_equal<<16),	1|(M4zero_less<<16),	-2)	\
entry(M4less_equal|(M4zero_less<<16),	1|(M4less_equal<<16),	-2)	\
entry(M4minus_two_rot|(M4two_rot<<16),	0,	503)	\
entry(0,	0,	-1)	\
entry(M4swap|(M4or<<16),	1|(M4or<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4swap|(M4minus<<16),	1|(M4sub<<16),	-2)	\
entry(M4rot|(M4flip<<16),	1|(M4swap<<16),	263)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4plus|(M4negate<<16),	2|(M4negate<<16)|(M4sub<<32),	-2)	\
entry(M4dup|(M4more<<16),	2|(M4drop<<16)|(M4false<<32),	-2)	\
entry(0,	0,	-1)	\
entry(M4zero_equal|(M4zero_more<<16),	2|(M4drop<<16)|(M4false<<32),	-2)	\
entry(M4zero_more|(M4zero_more_equal<<16),	1|(M4zero_less_equal<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4swap|(M4swap<<16),	0,	-2)	\
entry(M4zero_ne|(M4_if0_<<16),	1|(M4_if0_<<16),	-2)	\
entry(M4swap|(M4u_less_equal<<16),	1|(M4u_more_equal<<16),	285)	\
entry(M4dup|(M4u_more<<16),	2|(M4drop<<16)|(M4false<<32),	-2)	\
entry(M4invert|(M4one_plus<<16),	1|(M4negate<<16),	283)	\
entry(M4two_over|(M4two_nip<<16),	2|(M4two_drop<<16)|(M4two_dup<<32),	-2)	\
entry(0,	0,	-1)	\
entry(M4_ip_|(M4drop<<16),	0,	-2)	\
entry(M4flip|(M4swap<<16),	1|(M4minus_rot<<16),	-2)	\
entry(M4dup|(M4nip<<16),	0,	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4more|(M4zero_ne<<16),	1|(M4more<<16),	-2)	\
entry(M4eight|(M4times<<16),	1|(M4eight_times<<16),	-2)	\
entry(M4rot|(M4rot<<16),	1|(M4minus_rot<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4negate|(M4abs<<16),	1|(M4abs<<16),	295)	\
entry(M4one|(M4div<<16),	0,	-2)	\
entry(M4minus_two_rot|(M4minus_two_rot<<16),	1|(M4two_rot<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4dup|(M4and<<16),	0,	-2)	\
entry(M4int_aligned|(M4int_aligned<<16),	1|(M4int_aligned<<16),	302)	\
entry(M4invert|(M4zero_less<<16),	1|(M4zero_more_equal<<16),	-2)	\
entry(M4c_fetch|(M4drop<<16),	1|(M4drop<<16),	308)	\
entry(M4equal|(M4zero_ne<<16),	1|(M4equal<<16),	303)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4zero_ne|(M4invert<<16),	1|(M4zero_equal<<16),	-2)	\
entry(M4two_plus|(M4one_minus<<16),	1|(M4one_plus<<16),	307)	\
entry(M4swap|(M4flip<<16),	1|(M4rot<<16),	-2)	\
entry(M4zero_more_equal|(M4zero_ne<<16),	1|(M4zero_more_equal<<16),	-2)	\
entry(M4swap|(M4xor<<16),	1|(M4xor<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4dup|(M4_if0_<<16),	1|(M4_q_if0_<<16),	-2)	\
entry(M4zero_ne|(M4zero_more_equal<<16),	1|(M4zero_equal<<16),	-2)	\
entry(M4zero|(M4u_less<<16),	2|(M4drop<<16)|(M4false<<32),	-2)	\
entry(0,	0,	-1)	\
entry(M4int_align|(M4short_align<<16),	1|(M4int_align<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4trail|(M4tuck<<16),	1|(M4two_dup<<16),	318)	\
entry(M4flip|(M4minus_rot<<16),	1|(M4swap<<16),	-2)	\
entry(M4fetch|(M4drop<<16),	1|(M4drop<<16),	317)	\
entry(M4more_equal|(M4zero_ne<<16),	1|(M4more_equal<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4over|(M4nip<<16),	2|(M4drop<<16)|(M4dup<<32),	-2)	\
entry(0,	0,	-1)	\
entry(M4short_aligned|(M4int_aligned<<16),	1|(M4int_aligned<<16),	314)	\
entry(M4swap|(M4plus<<16),	1|(M4plus<<16),	-2)	\
entry(M4invert|(M4_while0_<<16),	1|(M4_while_<<16),	327)	\
entry(M4dup|(M4drop<<16),	0,	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4int_align|(M4int_align<<16),	1|(M4int_align<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4four|(M4div<<16),	1|(M4four_sm_div<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4dup|(M4max<<16),	0,	-2)	\
entry(M4swap|(M4u_more_equal<<16),	1|(M4u_less_equal<<16),	332)	\
entry(M4trail|(M4drop<<16),	2|(M4drop<<16)|(M4dup<<32),	321)	\
entry(M4equal|(M4zero_more<<16),	2|(M4two_drop<<16)|(M4false<<32),	-2)	\
entry(M4swap|(M4over<<16),	1|(M4tuck<<16),	-2)	\
entry(M4invert|(M4_while_<<16),	1|(M4_while0_<<16),	342)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4swap|(M4ne<<16),	1|(M4ne<<16),	346)	\
entry(M4equal|(M4zero_equal<<16),	1|(M4ne<<16),	-2)	\
entry(M4more|(M4zero_equal<<16),	1|(M4less_equal<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4trail|(M4nip<<16),	0,	350)	\
entry(M4ne|(M4zero_less<<16),	1|(M4ne<<16),	-2)	\
entry(M4zero_equal|(M4_until0_<<16),	1|(M4_until_<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4less|(M4zero_less_equal<<16),	2|(M4two_drop<<16)|(M4true<<32),	-2)	\
entry(M4swap|(M4u_less<<16),	1|(M4u_more<<16),	357)	\
entry(0,	0,	-1)	\
entry(M4less_equal|(M4zero_more<<16),	2|(M4two_drop<<16)|(M4false<<32),	356)	\
entry(M4invert|(M4negate<<16),	1|(M4one_plus<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4times|(M4negate<<16),	2|(M4negate<<16)|(M4times<<32),	-2)	\
entry(M4ne|(M4zero_ne<<16),	1|(M4ne<<16),	-2)	\
entry(M4swap|(M4times<<16),	1|(M4times<<16),	366)	\
entry(M4two_rot|(M4two_rot<<16),	1|(M4minus_two_rot<<16),	-2)	\
entry(M4zero_equal|(M4zero_less<<16),	1|(M4zero_less<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4zero|(M4rshift<<16),	0,	-2)	\
entry(M4two_div|(M4two_div<<16),	1|(M4four_div<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4_ip_to_data_|(M4two_drop<<16),	0,	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4two|(M4minus_two_roll<<16),	1|(M4minus_two_rot<<16),	377)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4less|(M4zero_more_equal<<16),	1|(M4more_equal<<16),	378)	\
entry(0,	0,	-1)	\
entry(M4two|(M4minus<<16),	1|(M4two_minus<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4four_plus|(M4four_plus<<16),	1|(M4eight_plus<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4rot|(M4minus_rot<<16),	0,	387)	\
entry(0,	0,	-1)	\
entry(M4less_equal|(M4invert<<16),	1|(M4more<<16),	-2)	\
entry(M4two_dup|(M4two_over<<16),	2|(M4two_dup<<16)|(M4two_dup<<32),	-2)	\
entry(M4minus_rot|(M4minus_rot<<16),	1|(M4rot<<16),	-2)	\
entry(M4minus_rot|(M4over<<16),	2|(M4flip<<16)|(M4tuck<<32),	-2)	\
entry(M4two_r_from|(M4two_to_r<<16),	0,	391)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4three|(M4rshift<<16),	1|(M4eight_div<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4aligned|(M4int_aligned<<16),	1|(M4aligned<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4two_dup|(M4two_swap<<16),	1|(M4two_dup<<16),	-2)	\
entry(M4zero_equal|(M4zero_less_equal<<16),	2|(M4drop<<16)|(M4true<<32),	-2)	\
entry(M4r_from|(M4to_r<<16),	0,	-2)	\
entry(M4dup|(M4sub<<16),	2|(M4drop<<16)|(M4zero<<32),	-2)	\
entry(M4div|(M4negate<<16),	2|(M4negate<<16)|(M4div<<32),	407)	\
entry(M4zero_ne|(M4_until0_<<16),	1|(M4_until0_<<16),	-2)	\
entry(M4dup|(M4_until_<<16),	1|(M4_q_until_<<16),	411)	\
entry(M4over|(M4minus_rot<<16),	1|(M4trail<<16),	-2)	\
entry(M4tuck|(M4minus_rot<<16),	1|(M4dup<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4dup|(M4plus<<16),	1|(M4two_times<<16),	-2)	\
entry(M4sub|(M4negate<<16),	1|(M4minus<<16),	415)	\
entry(M4dup|(M4over<<16),	2|(M4dup<<16)|(M4dup<<32),	-2)	\
entry(M4_ip_to_data_addr_|(M4drop<<16),	0,	-2)	\
entry(M4negate|(M4minus<<16),	1|(M4plus<<16),	-2)	\
entry(M4two_dup|(M4swap<<16),	2|(M4over<<16)|(M4trail<<32),	419)	\
entry(M4dup|(M4ne<<16),	2|(M4drop<<16)|(M4false<<32),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4invert|(M4_if0_<<16),	1|(M4_if_<<16),	425)	\
entry(M4zero_more|(M4zero_equal<<16),	1|(M4zero_less_equal<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4one|(M4lshift<<16),	1|(M4two_times<<16),	-2)	\
entry(M4two_rot|(M4minus_two_rot<<16),	0,	-2)	\
entry(M4short_align|(M4int_align<<16),	1|(M4int_align<<16),	-2)	\
entry(M4dup|(M4u_more_equal<<16),	2|(M4drop<<16)|(M4true<<32),	-2)	\
entry(M4r_from|(M4drop<<16),	1|(M4r_from_drop<<16),	431)	\
entry(0,	0,	-1)	\
entry(M4dup|(M4div<<16),	2|(M4drop<<16)|(M4one<<32),	-2)	\
entry(M4negate|(M4one_minus<<16),	1|(M4invert<<16),	435)	\
entry(0,	0,	-1)	\
entry(M4two_minus|(M4four_plus<<16),	1|(M4two_plus<<16),	438)	\
entry(M4zero_ne|(M4_while0_<<16),	1|(M4_while0_<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4dup|(M4minus_rot<<16),	1|(M4tuck<<16),	439)	\
entry(M4dup|(M4_until0_<<16),	1|(M4_q_until0_<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4over|(M4swap<<16),	1|(M4trail<<16),	-2)	\
entry(M4trail|(M4swap<<16),	1|(M4over<<16),	-2)	\
entry(M4negate|(M4zero_equal<<16),	1|(M4zero_equal<<16),	-2)	\
entry(M4more|(M4invert<<16),	1|(M4less_equal<<16),	447)	\
entry(0,	0,	-1)	\
entry(M4zero_ne|(M4zero_less<<16),	1|(M4zero_less<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4two|(M4rshift<<16),	1|(M4four_div<<16),	-2)	\
entry(M4equal|(M4zero_more_equal<<16),	1|(M4ne<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4swap|(M4max<<16),	1|(M4max<<16),	442)	\
entry(M4i|(M4minus<<16),	1|(M4i_minus<<16),	456)	\
entry(0,	0,	-1)	\
entry(M4dup|(M4xor<<16),	2|(M4drop<<16)|(M4zero<<32),	-2)	\
entry(0,	0,	-1)	\
entry(M4swap|(M4equal<<16),	1|(M4equal<<16),	458)	\
entry(M4flip|(M4nip<<16),	2|(M4nip<<16)|(M4swap<<32),	-2)	\
entry(M4dup|(M4swap<<16),	1|(M4dup<<16),	-2)	\
entry(M4over|(M4flip<<16),	1|(M4over<<16),	-2)	\
entry(M4i|(M4times<<16),	1|(M4i_times<<16),	451)	\
entry(M4minus_rot|(M4rot<<16),	0,	-2)	\
entry(0,	0,	-1)	\
entry(M4two_r_fetch|(M4drop<<16),	1|(M4i_prime<<16),	-2)	\
entry(M4swap|(M4min<<16),	1|(M4min<<16),	-2)	\
entry(M4swap|(M4nip<<16),	1|(M4drop<<16),	-2)	\
entry(M4swap|(M4u_more<<16),	1|(M4u_less<<16),	-2)	\
entry(M4r_from_drop|(M4to_r<<16),	1|(M4r_store<<16),	462)	\
entry(M4swap|(M4less<<16),	1|(M4more<<16),	476)	\
entry(M4one_minus|(M4one_plus<<16),	0,	-2)	\
entry(0,	0,	-1)	\
entry(M4invert|(M4zero_more_equal<<16),	1|(M4zero_less<<16),	473)	\
entry(M4zero_more|(M4zero_less<<16),	1|(M4zero_less<<16),	-2)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4dup|(M4u_less_equal<<16),	2|(M4drop<<16)|(M4true<<32),	-2)	\
entry(M4less|(M4zero_more<<16),	2|(M4two_drop<<16)|(M4false<<32),	-2)	\
entry(0,	0,	-1)	\
entry(M4two_div|(M4four_div<<16),	1|(M4eight_div<<16),	482)	\
entry(M4zero_less_equal|(M4zero_equal<<16),	1|(M4zero_more<<16),	485)	\
entry(M4minus_rot|(M4flip<<16),	2|(M4swap<<16)|(M4minus_rot<<32),	-2)	\
entry(M4swap|(M4more<<16),	1|(M4less_equal<<16),	-2)	\
entry(M4swap|(M4and<<16),	1|(M4and<<16),	484)	\
entry(M4two|(M4times<<16),	1|(M4two_times<<16),	-2)	\
entry(M4aligned|(M4aligned<<16),	1|(M4aligned<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4swap|(M4more_equal<<16),	1|(M4less_equal<<16),	-2)	\
entry(0,	0,	-1)	\
entry(M4invert|(M4_if_<<16),	1|(M4_if0_<<16),	-2)	\
entry(M4two_over|(M4two_drop<<16),	0,	-2)	\
entry(M4less_equal|(M4zero_more_equal<<16),	1|(M4more<<16),	-2)	\
entry(M4negate|(M4_while_<<16),	1|(M4_while_<<16),	-2)	\
entry(M4dup|(M4trail<<16),	2|(M4dup<<16)|(M4dup<<32),	-2)	\
entry(0,	0,	-1)	\
entry(M4tuck|(M4rot<<16),	1|(M4dup<<16),	497)	\
entry(0,	0,	-1)	\
entry(0,	0,	-1)	\
entry(M4negate|(M4_while0_<<16),	1|(M4_while0_<<16),	489)	\
entry(M4i|(M4plus<<16),	1|(M4i_plus<<16),	502)

