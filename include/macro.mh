/**
 * Copyright (C) 2020 Massimiliano Ghilardi
 *
 * This file is part of m64th.
 *
 * m64th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m64th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m64th.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef M64TH_INCLUDE_MACRO_MH
#define M64TH_INCLUDE_MACRO_MH

/** lots of magic macros */

#define CAT2_(a, b) a##b
#define CAT2(a, b) CAT2_(a, b)

#define CAT3_(a, b, c) a##b##c
#define CAT3(a, b, c) CAT3_(a, b, c)

/* works only for 1..100 arguments. broken for zero arguments */
#define COUNT_ARGS_(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17,    \
                    _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32,     \
                    _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47,     \
                    _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62,     \
                    _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77,     \
                    _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88, _89, _90, _91, _92,     \
                    _93, _94, _95, _96, _97, _98, _99, _100, n, ...)                               \
    n
#define COUNT_ARGS(...)                                                                            \
    COUNT_ARGS_(__VA_ARGS__, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84,  \
                63, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64,    \
                63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44,    \
                43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24,    \
                23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)

#define FIRST_ARG_(a, ...) a
#define FIRST_ARG(a, ...) FIRST_ARG_(a)

#define SKIP_FIRST_ARG_(a, ...) __VA_ARGS__
#define SKIP_FIRST_ARG(...) SKIP_FIRST_ARG_(__VA_ARGS__)

#define SECOND_ARG_(a, b, ...) b
#define SECOND_ARG(a, b, ...) SECOND_ARG_(a, b)

#define FIRST_3_ARGS_(a, b, c, ...) a, b, c
#define FIRST_3_ARGS(a, b, c, ...) FIRST_3_ARGS_(a, b, c)
#define FIRST_4_ARGS_(a, b, c, d, ...) a, b, c, d
#define FIRST_4_ARGS(a, b, c, d, ...) FIRST_4_ARGS_(a, b, c, d)
#define FIRST_5_ARGS_(a, b, c, d, e, ...) a, b, c, d, e
#define FIRST_5_ARGS(a, b, c, d, e, ...) FIRST_5_ARGS_(a, b, c, d, e)
#define WRAP_ARGS_1(x, _1) x(_1)
#define WRAP_ARGS_2(x, _1, _2) x(_1) x(_2)
#define WRAP_ARGS_3(x, _1, _2, _3) x(_1) x(_2) x(_3)
#define WRAP_ARGS_4(x, _1, _2, _3, _4) x(_1) x(_2) x(_3) x(_4)
#define WRAP_ARGS_5(x, _1, _2, _3, _4, _5) x(_1) x(_2) x(_3) x(_4) x(_5)
#define WRAP_ARGS_6(x, _1, _2, _3, _4, _5, _6) x(_1) x(_2) x(_3) x(_4) x(_5) x(_6)
#define WRAP_ARGS_7(x, _1, _2, _3, _4, _5, _6, _7) x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7)
#define WRAP_ARGS_8(x, _1, _2, _3, _4, _5, _6, _7, _8)                                             \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8)
#define WRAP_ARGS_9(x, _1, _2, _3, _4, _5, _6, _7, _8, _9)                                         \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9)
#define WRAP_ARGS_10(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10)                                   \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10)
#define WRAP_ARGS_11(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) x(_11)
#define WRAP_ARGS_12(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12)                         \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) x(_11) x(_12)
#define WRAP_ARGS_13(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_3(x, __VA_ARGS__)
#define WRAP_ARGS_14(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_4(x, __VA_ARGS__)
#define WRAP_ARGS_15(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_5(x, __VA_ARGS__)
#define WRAP_ARGS_16(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_6(x, __VA_ARGS__)
#define WRAP_ARGS_17(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_7(x, __VA_ARGS__)
#define WRAP_ARGS_18(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_8(x, __VA_ARGS__)
#define WRAP_ARGS_19(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_9(x, __VA_ARGS__)
#define WRAP_ARGS_20(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_10(x, __VA_ARGS__)
#define WRAP_ARGS_21(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_11(x, __VA_ARGS__)
#define WRAP_ARGS_22(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_12(x, __VA_ARGS__)
#define WRAP_ARGS_23(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_13(x, __VA_ARGS__)
#define WRAP_ARGS_24(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_14(x, __VA_ARGS__)
#define WRAP_ARGS_25(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_15(x, __VA_ARGS__)
#define WRAP_ARGS_26(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_16(x, __VA_ARGS__)
#define WRAP_ARGS_27(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_17(x, __VA_ARGS__)
#define WRAP_ARGS_28(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_18(x, __VA_ARGS__)
#define WRAP_ARGS_29(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_19(x, __VA_ARGS__)
#define WRAP_ARGS_30(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_20(x, __VA_ARGS__)
#define WRAP_ARGS_31(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_21(x, __VA_ARGS__)
#define WRAP_ARGS_32(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_22(x, __VA_ARGS__)
#define WRAP_ARGS_33(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_23(x, __VA_ARGS__)
#define WRAP_ARGS_34(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_24(x, __VA_ARGS__)
#define WRAP_ARGS_35(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_25(x, __VA_ARGS__)
#define WRAP_ARGS_36(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_26(x, __VA_ARGS__)
#define WRAP_ARGS_37(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_27(x, __VA_ARGS__)
#define WRAP_ARGS_38(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_28(x, __VA_ARGS__)
#define WRAP_ARGS_39(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_29(x, __VA_ARGS__)
#define WRAP_ARGS_40(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_30(x, __VA_ARGS__)
#define WRAP_ARGS_41(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_31(x, __VA_ARGS__)
#define WRAP_ARGS_42(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_32(x, __VA_ARGS__)
#define WRAP_ARGS_43(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_33(x, __VA_ARGS__)
#define WRAP_ARGS_44(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_34(x, __VA_ARGS__)
#define WRAP_ARGS_45(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_35(x, __VA_ARGS__)
#define WRAP_ARGS_46(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_36(x, __VA_ARGS__)
#define WRAP_ARGS_47(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_37(x, __VA_ARGS__)
#define WRAP_ARGS_48(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_38(x, __VA_ARGS__)
#define WRAP_ARGS_49(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_39(x, __VA_ARGS__)
#define WRAP_ARGS_50(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_40(x, __VA_ARGS__)
#define WRAP_ARGS_51(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_41(x, __VA_ARGS__)
#define WRAP_ARGS_52(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_42(x, __VA_ARGS__)
#define WRAP_ARGS_53(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_43(x, __VA_ARGS__)
#define WRAP_ARGS_54(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_44(x, __VA_ARGS__)
#define WRAP_ARGS_55(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_45(x, __VA_ARGS__)
#define WRAP_ARGS_56(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_46(x, __VA_ARGS__)
#define WRAP_ARGS_57(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_47(x, __VA_ARGS__)
#define WRAP_ARGS_58(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_48(x, __VA_ARGS__)
#define WRAP_ARGS_59(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_49(x, __VA_ARGS__)
#define WRAP_ARGS_60(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_50(x, __VA_ARGS__)
#define WRAP_ARGS_61(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_51(x, __VA_ARGS__)
#define WRAP_ARGS_62(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_52(x, __VA_ARGS__)
#define WRAP_ARGS_63(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_53(x, __VA_ARGS__)
#define WRAP_ARGS_64(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_54(x, __VA_ARGS__)
#define WRAP_ARGS_65(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_55(x, __VA_ARGS__)
#define WRAP_ARGS_66(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_56(x, __VA_ARGS__)
#define WRAP_ARGS_67(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_57(x, __VA_ARGS__)
#define WRAP_ARGS_68(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_58(x, __VA_ARGS__)
#define WRAP_ARGS_69(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_59(x, __VA_ARGS__)
#define WRAP_ARGS_70(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_60(x, __VA_ARGS__)
#define WRAP_ARGS_71(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_61(x, __VA_ARGS__)
#define WRAP_ARGS_72(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_62(x, __VA_ARGS__)
#define WRAP_ARGS_73(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_63(x, __VA_ARGS__)
#define WRAP_ARGS_74(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_64(x, __VA_ARGS__)
#define WRAP_ARGS_75(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_65(x, __VA_ARGS__)
#define WRAP_ARGS_76(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_66(x, __VA_ARGS__)
#define WRAP_ARGS_77(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_67(x, __VA_ARGS__)
#define WRAP_ARGS_78(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_68(x, __VA_ARGS__)
#define WRAP_ARGS_79(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_69(x, __VA_ARGS__)
#define WRAP_ARGS_80(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_70(x, __VA_ARGS__)
#define WRAP_ARGS_81(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_71(x, __VA_ARGS__)
#define WRAP_ARGS_82(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_72(x, __VA_ARGS__)
#define WRAP_ARGS_83(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_73(x, __VA_ARGS__)
#define WRAP_ARGS_84(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_74(x, __VA_ARGS__)
#define WRAP_ARGS_85(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_75(x, __VA_ARGS__)
#define WRAP_ARGS_86(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_76(x, __VA_ARGS__)
#define WRAP_ARGS_87(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_77(x, __VA_ARGS__)
#define WRAP_ARGS_88(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_78(x, __VA_ARGS__)
#define WRAP_ARGS_89(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_79(x, __VA_ARGS__)
#define WRAP_ARGS_90(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_80(x, __VA_ARGS__)
#define WRAP_ARGS_91(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_81(x, __VA_ARGS__)
#define WRAP_ARGS_92(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_82(x, __VA_ARGS__)
#define WRAP_ARGS_93(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_83(x, __VA_ARGS__)
#define WRAP_ARGS_94(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_84(x, __VA_ARGS__)
#define WRAP_ARGS_95(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_85(x, __VA_ARGS__)
#define WRAP_ARGS_96(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_86(x, __VA_ARGS__)
#define WRAP_ARGS_97(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_87(x, __VA_ARGS__)
#define WRAP_ARGS_98(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_88(x, __VA_ARGS__)
#define WRAP_ARGS_99(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                              \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_89(x, __VA_ARGS__)
#define WRAP_ARGS_100(x, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, ...)                             \
    x(_1) x(_2) x(_3) x(_4) x(_5) x(_6) x(_7) x(_8) x(_9) x(_10) WRAP_ARGS_90(x, __VA_ARGS__)

#define WRAP_ARGS(x, ...) CAT2(WRAP_ARGS_, COUNT_ARGS(__VA_ARGS__))(x, __VA_ARGS__)

/* internal m64th macros used (mostly) by assembly */

/* helps catching errors. how to include __FILE__ in error message/ */
#define M6 CAT2(error_extra_comma_after_end_of_list_at_line_, __LINE__)

#define M6SIZEOF_SHORT(x) _, 2
#define M6SIZEOF_INT(x) _, 4
#define M6SIZEOF_CELL(x) _, SZ
#define M6SIZEOF_CALL(x) _, (SZt + SZ)
#define M6SIZEOF_WADDR(x) _, SZ
#define M6SIZEOF_XT(x) _, SZ
#define M6SIZEOF_LIT_STRING(len, str) _, ((3 * SZt + len - 1) & ~(SZt - 1))

#define M6UNITOF_SHORT(x) _, 2
#define M6UNITOF_INT(x) _, 4
#define M6UNITOF_CELL(x) _, SZ
#define M6UNITOF_CALL(x) _, CALL
#define M6UNITOF_WADDR(x) _, SZ
#define M6UNITOF_XT(x) _, SZ
#define M6UNITOF_LIT_STRING(len, str) _, LIT_STRING

#define M6SIZEOF(token) SECOND_ARG(M6SIZEOF_##token, SZt)
#define M6UNITOF(token) SECOND_ARG(M6UNITOF_##token, SZt)

#define M6SUM_SIZEOF_(arg) M6SIZEOF(arg) +
#define M6SUM_SIZEOF(...) (WRAP_ARGS(M6SUM_SIZEOF_, __VA_ARGS__) 0)

#define M6FLAG_CONSUMES_IP_SZ CAT2(M6FLAG_CONSUMES_IP_, SZ)
#define M6FLAG_CONSUMES_IP_SZt CAT2(M6FLAG_CONSUMES_IP_, SZt)
#define M6FLAG_CONSUMES_IP_SZt2 CAT2(M6FLAG_CONSUMES_IP_, SZt2)
#define M6FLAG_CONSUMES_IP_SZ_SZt CAT2(M6FLAG_CONSUMES_IP_, SZ_SZt)

/* expand to the correct .[N]byte sequence for token i.e. one of:
 * .byte ...
 * .2byte ...
 * .4byte ...
 * .8byte ...
 */
#define M6ASM_BYTES(token) CAT2(M6ASM_BYTES_, M6UNITOF(token))(token)
#define M6ASM_BYTES_1(token) .byte M6TOKEN_VAL(token);
#define M6ASM_BYTES_2(token) .2byte M6TOKEN_VAL(token);
#define M6ASM_BYTES_4(token) .4byte M6TOKEN_VAL(token);
#define M6ASM_BYTES_8(token) .8byte M6TOKEN_VAL(token);
#define M6ASM_BYTES_CALL(token) M6TOKEN_VAL(token)       /* expands to M6CALL(word)           */
#define M6ASM_BYTES_LIT_STRING(token) M6TOKEN_VAL(token) /* expands to M6LIT_STRING(len, str) */

/*
 * assembler macro: insert M6_call_, WORD_SYM(word).code in a sequence of m6token.
 */
#define M6CALL(word)                                                                               \
    CAT3(., SZt, byte) M6_call_;                                                                   \
    CAT3(., SZ, byte) WORD_SYM(word) + WORD_OFF_XT;

/* assembler macro: number of extra m6tokens needed by M6CALL(...)
 * and number of m6tokens needed by M6XT(...) */
#define nCALLt (SZ / SZt)

/*
 * assembler macro: insert M6_lit_string_, length and padded ascii string
 * in a sequence of m6token.
 */
#define M6LIT_STRING(len, str)                                                                     \
    CAT3(., SZt, byte) M6_lit_string_, M6T(len);                                                   \
    .ascii str;                                                                                    \
    ASM_ALIGN(PSZt, 0) /* needs #include "align.mh" */

/* assembler macro: number of extra m6tokens needed by M6LIT_STRING(len, ...) */
#define nSTRt(len) (1 + ((len) + SZt - 1) / SZt)

#endif /* M64TH_INCLUDE_MACRO_MH */
