/**
 * Copyright (C) 2020 Massimiliano Ghilardi
 *
 * This file is part of m64th.
 *
 * m64th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m64th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m64th.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef M64TH_INCLUDE_WORDLIST_MH
#define M64TH_INCLUDE_WORDLIST_MH

#include "hashmap.mh"

#define M6WORDLIST_OFF_DICT 0                     /* offset of m6wordlist->dict     */
#define M6WORDLIST_OFF_LAST SZ                    /* offset of m6wordlist->last     */
#define M6WORDLIST_OFF_MAP SZ2                    /* offset of m6wordlist->map      */
#define M6WORDLIST_SZ (SZ2 + M6HASHMAP_SZ_STRING) /* sizeof(m6wordlist)             */

#define WORDLIST_SYM(name) m6wordlist_##name

/* clang-format off */

#define WORDLIST_DEF_SYM(name)                                                                     \
    DATA_ALIGN()                                                                                   \
    .globl WORDLIST_SYM(name);                                                                     \
    .type WORDLIST_SYM(name), @object;                                                             \
    WORDLIST_SYM(name) :

/* clang-format on */

#define WORDLIST_WORD_OFF(name, wordname) .4byte WORDLIST_SYM(name) - WORD_SYM(wordname);
#define WORDLIST_NAME_OFF(name) .2byte WORDLIST_SYM(name) - COUNTEDSTRING_SYM(name);
#define WORDLIST_END(name) .size WORDLIST_SYM(name), .- WORDLIST_SYM(name);

#define WORDLIST(name)                                                                             \
    WORDLIST_DEF_SYM(name)                                                                         \
    CAT3(., SZ, byte) DICT_SYM(name);                                                              \
    .fill M6WORDLIST_SZ - M6WORDLIST_OFF_LAST, 1, 0;

#endif /* M64TH_INCLUDE_WORDLIST_MH */
