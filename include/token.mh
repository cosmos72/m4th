/**
 * Copyright (C) 2020 Massimiliano Ghilardi
 *
 * This file is part of m4th.
 *
 * m4th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m4th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m4th.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef M4TH_INCLUDE_TOKEN_MH
#define M4TH_INCLUDE_TOKEN_MH

#include "token_alias.mh"
#include "token_forth.mh"
#include "token_m4th.mh"
#include "word.mh" /* WORD_SYM() */

#define M4TOKEN_SYM(name) m4##name
#define M4TOKEN_SYM_COMMA(name) M4TOKEN_SYM(name),
#define M4TOKEN_VAL(name) M4##name
#define M4TOKEN_VAL_COMMA(name) M4TOKEN_VAL(name),

/* assembler macro: insert an int as wide as m4token in a sequence of m4token */
#define m4T(x) ((x)&0xFFFF)
#define M4T(x) ((x)&0xFFFF)

/* assembler macro: insert an int16 in a sequence of m4token */
#define M4SHORT(x) ((x)&0xFFFF)

/* assembler macro: insert an int32 in a sequence of m4token */
#define M4INT(x) ((x)&0xFFFFFFFF)

/* assembler macro: insert an m4cell in a sequence of m4token */
#define M4CELL(x) (x)

/* assembler macro: insert string in a sequence of m4token */
#define M4STRING_LIT(len, str)

/* assembler macro: insert word address in a sequence of m4token */
#define M4WADDR(wordname) WORD_SYM(wordname)

/*
 * assembler macro: insert XT address in a sequence of m4token.
 * only works if word.data_n == 0
 */
#define M4XT(wordname) (WORD_SYM(wordname) + WORD_OFF_XT)

/* not here: defined by file macro.mh */
/* #define M4LIT_STRING(len, str) */

#endif /* M4TH_INCLUDE_TOKEN_MH */
