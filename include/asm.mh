/**
 * Copyright (C) 2020 Massimiliano Ghilardi
 *
 * This file is part of m4th.
 *
 * m4th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m4th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m4th.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef M4TH_INCLUDE_ASM_MH
#define M4TH_INCLUDE_ASM_MH

#include "countedstring.mh"
#include "flag.mh"
#include "func.mh"
#include "iobuf.mh"
#include "m4th.mh" /* also define public macros */
#include "macro.mh"
#include "token.mh"
#include "word.mh"

/* clang-format off */

#define TOKEN_MAX ((1<<(8*SZt))-1)

#define AT_0(addr, i, _)                AT0(addr)
#define AT_x(addr, i, _)                ATx(addr, i)
#define AT_xy(addr, i, shift)           ATxy(addr, i, shift)
#define AT_(addr, i, shift, kind, ...)  AT_##kind(addr, i, shift)
/**
 * expand AT(reg)            -> AT_0 (reg)
 * expand AT(reg, imm)       -> AT_x (reg, imm)
 * expand AT(reg1,reg2,rmul) -> AT_xy(reg1,reg2,rmul)
 */
#define AT(...)                         AT_(__VA_ARGS__, xy, x, 0)

/* align register at n = some power of two */
#define ALIGN(n, reg)                                                                              \
    ADD2(IMM((n)-1), reg)                                                                          \
    AND2(IMM(-(n)),  reg)

#define TO(label) .L##label /* local label */
#define LABEL(label) TO(label) :

/* clang-format on */

#endif /* M4TH_INCLUDE_ASM_MH */
