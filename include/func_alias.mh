/**
 * Copyright (C) 2020 Massimiliano Ghilardi
 *
 * This file is part of m4th.
 *
 * m4th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m4th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m4th.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef M4TH_INCLUDE_FUNC_ALIAS_MH
#define M4TH_INCLUDE_FUNC_ALIAS_MH

#include "../dispatch/sz.mh" /* SZ */
#include "macro.mh"          /* CAT3() */

#define m4fbegin m4fnoop         /* begin      noop, used as compile marker   */
#define m4f_again_ m4f_jump_     /* (again)    unconditional jump             */
#define m4f_break_ m4f_jump_     /* (break)    unconditional jump             */
#define m4f_continue_ m4f_jump_  /* (continue) unconditional jump             */
#define m4f_else_ m4f_jump_      /* (else)     unconditional jump             */
#define m4fthen m4fnoop          /* then       noop, used as compile marker   */
#define m4f_repeat_ m4f_jump_    /* (repeat)   unconditional jump             */
#define m4f_until_ m4f_if_       /* (until)    conditional jump if dtop == 0  */
#define m4f_until0_ m4f_if0_     /* (until0)   conditional jump if dtop <> 0  */
#define m4f_q_until_ m4f_q_if_   /* (?until)   conditional jump if dtop == 0  */
#define m4f_q_until0_ m4f_q_if0_ /* (?until0)  conditional jump if dtop <> 0  */
#define m4f_while_ m4f_if_       /* (while)    conditional jump if dtop == 0  */
#define m4f_while0_ m4f_if0_     /* (while0)   conditional jump if dtop <> 0  */
#define m4f_q_while_ m4f_q_if_   /* (?while)   conditional jump if dtop == 0  */
#define m4f_q_while0_ m4f_q_if0_ /* (?while0)  conditional jump if dtop <> 0  */

/** these are implemented in forth - thus no corresponding assembly function */
#define m4f_inline_ m4f_missing_
#define m4f_optimize_ m4f_missing_
#define m4fcolon m4f_missing_

/** forth 'core ext' word set aliases */
#define m4ffalse m4fzero     /* false  */
#define m4ftrue m4fminus_one /* true   */
#define m4fr_fetch m4fi      /* r@     */

/** m4th-user aliases */
#define m4fr2nd_fetch m4fi_prime /* r2nd@ */

#define m4fchar_fetch m4fc_fetch       /* char@   alias for c@     - no dedicated m4func */
#define m4fbyte_store m4fc_store       /* byte!   alias for c!     - no dedicated m4func */
#define m4fchar_store m4fc_store       /* char!   alias for c!     - no dedicated m4func */
#define m4fushort_store m4fshort_store /* ushort! alias for short! - no dedicated m4func */
#define m4fuint_store m4fint_store     /* uint!   alias for int!   - no dedicated m4func */

#define m4fbytes m4fnoop         /* bytes */
#define m4fbyte_plus m4fone_plus /* byte+ */
#define m4fchars m4fnoop         /* chars */
#define m4fchar_plus m4fone_plus /* char+ */

#define m4fshorts m4ftwo_times     /* shorts */
#define m4fshort_plus m4ftwo_plus  /* short+ */
#define m4fushorts m4ftwo_times    /* ushorts */
#define m4fushort_plus m4ftwo_plus /* ushort+ */

#define m4fint_plus m4ffour_plus  /* int+ */
#define m4fints m4ffour_times     /* ints */
#define m4fuint_plus m4ffour_plus /* uint+ */
#define m4fuints m4ffour_times    /* uints */

#define m4fcell_plus CAT3(m4f_, SZ, _plus) /* cell+    */
#define m4fcells CAT3(m4f_, SZ, _times)    /* cells    */

#define m4ftoken_plus CAT3(m4f_, SZt, _plus)       /* token+        */
#define m4ftoken_store CAT3(m4f_, SZt, u_store)    /* token!        */
#define m4ftoken_fetch CAT3(m4f_, SZt, u_fetch)    /* token@        */
#define m4ftokens CAT3(m4f_, SZt, _times)          /* tokens        */
#define m4ftoken_align CAT3(m4f_, SZt, _align)     /* token-align   */
#define m4ftoken_aligned CAT3(m4f_, SZt, _aligned) /* token-aligned */

#define m4fdiv_byte m4fnoop                /* /byte    =>      */
#define m4fdiv_char m4fnoop                /* /char    =>      */
#define m4fdiv_short m4ftwo_div            /* /short   => 2/   */
#define m4fdiv_ushort m4ftwo_div           /* /ushort  => 2/   */
#define m4fdiv_int m4ffour_div             /* /int     => 4/   */
#define m4fdiv_uint m4ffour_div            /* /uint    => 4/   */
#define m4fdiv_cell CAT3(m4f_, SZ, _div)   /* /cell    => SZ/  */
#define m4fdiv_token CAT3(m4f_, SZt, _div) /* /token   => SZt/ */

#define m4fto_token CAT3(m4f_to_, SZt, u) /* to-token => to-SZt   */

/* needed by m4fcell_plus, m4fcells, m4fdiv_cell, m4ftoken_plus, m4ftokens, m4fdiv_token above */
#define m4f_0 m4fzero              /* 0        */
#define m4f_1 m4fone               /* 1        */
#define m4f_1_times m4fnoop        /* 1*       */
#define m4f_1_div m4fnoop          /* 1/       */
#define m4f_2 m4ftwo               /* 2        */
#define m4f_2_times m4ftwo_times   /* 2*       */
#define m4f_2_plus m4ftwo_plus     /* 2+       */
#define m4f_2_minus m4ftwo_minus   /* 2-       */
#define m4f_2_div m4ftwo_div       /* 2/       */
#define m4f_3 m4fthree             /* 3        */
#define m4f_4 m4ffour              /* 4        */
#define m4f_4_times m4ffour_times  /* 4*       */
#define m4f_4_plus m4ffour_plus    /* 4+       */
#define m4f_4_div m4ffour_div      /* 4/       */
#define m4f_8 m4feight             /* 8        */
#define m4f_8_times m4feight_times /* 8*       */
#define m4f_8_plus m4feight_plus   /* 8+       */
#define m4f_8_div m4feight_div     /* 8/       */

/* needed by m4fto_token above */
#define m4f_to_1u m4fto_char
#define m4f_to_2u m4fto_ushort
#define m4f_to_4u m4fto_uint
#define m4f_to_8u m4fnoop

/* needed by m4ftoken_store above */
#define m4f_1u_store m4fchar_store
#define m4f_2u_store m4fushort_store
#define m4f_4u_store m4fuint_store
#define m4f_8u_store m4fstore

/* needed by m4ftoken_fetch above */
#define m4f_1u_fetch m4fchar_fetch
#define m4f_2u_fetch m4fushort_fetch
#define m4f_4u_fetch m4fuint_fetch
#define m4f_8u_fetch m4ffetch

/* needed by m4ftoken_align */
#define m4f_1_align m4fnoop
#define m4f_2_align m4fshort_align
#define m4f_4_align m4fint_align
#define m4f_8_align m4falign

/* needed by m4ftoken_aligned */
#define m4f_1_aligned m4fnoop
#define m4f_2_aligned m4fshort_aligned
#define m4f_4_aligned m4fint_aligned
#define m4f_8_aligned m4faligned

#endif /* M4TH_INCLUDE_FUNC_ALIAS_MH */
