/**
 * Copyright (C) 2020 Massimiliano Ghilardi
 *
 * This file is part of m64th.
 *
 * m64th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m64th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m64th.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef M4TH_INCLUDE_FUNC_ALIAS_MH
#define M4TH_INCLUDE_FUNC_ALIAS_MH

#include "../dispatch/sz.mh" /* SZ */
#include "macro.mh"          /* CAT3() */

#define m4f_1s_comma m4fc_comma
#define m4f_2s_comma m4fshort_comma
#define m4f_4s_comma m4fint_comma
#define m4f_8s_comma m4fcomma
#define m4ftoken_comma CAT3(m4f_, SZt, s_comma)
#define m4fxt_comma CAT3(m4f_, SZ, s_comma)

#define m4fbegin m4fnoop              /* begin       noop, used as compile marker   */
#define m4f_again_ m4f_jump_          /* (again)     unconditional jump             */
#define m4f_ahead_ m4f_jump_          /* (ahead)     unconditional jump             */
#define m4f_break_ m4f_jump_          /* (break)     unconditional jump             */
#define m4fcase m4fnoop               /* (case)      noop, used as compile marker   */
#define m4f_continue_ m4f_jump_       /* (continue)  unconditional jump             */
#define m4f_continue_if_ m4f_if0_     /* (continue-if)  conditional jump if dtop <> 0 */
#define m4f_continue_if0_ m4f_if_     /* (continue-if0) conditional jump if dtop == 0 */
#define m4f_does_exit_ m4fexit        /* (does-exit) alias of exit                  */
#define m4fendcase m4fdrop            /* endcase                                    */
#define m4f_endof_ m4f_jump_          /* (endof)     unconditional jump             */
#define m4f_else_ m4f_jump_           /* (else)      unconditional jump             */
#define m4f_fallthrough_ m4f_jump_    /* (fallthrough) unconditional jump           */
#define m4f_repeat_ m4f_jump_         /* (repeat)    unconditional jump             */
#define m4fthen m4fnoop               /* then        noop, used as compile marker   */
#define m4f_until_ m4f_if_            /* (until)     conditional jump if dtop == 0  */
#define m4f_until0_ m4f_if0_          /* (until0)    conditional jump if dtop <> 0  */
#define m4f_q_continue_if_ m4f_q_if0_ /* (?continue-if)  conditional jump if dtop <> 0 */
#define m4f_q_continue_if0_ m4f_q_if_ /* (?continue-if0) conditional jump if dtop == 0 */
#define m4f_q_until_ m4f_q_if_        /* (?until)    conditional jump if dtop == 0  */
#define m4f_q_until0_ m4f_q_if0_      /* (?until0)   conditional jump if dtop <> 0  */
#define m4f_while_ m4f_if_            /* (while)     conditional jump if dtop == 0  */
#define m4f_while0_ m4f_if0_          /* (while0)    conditional jump if dtop <> 0  */
#define m4f_q_while_ m4f_q_if_        /* (?while)    conditional jump if dtop == 0  */
#define m4f_q_while0_ m4f_q_if0_      /* (?while0)   conditional jump if dtop <> 0  */

/** these are implemented in forth - thus no corresponding assembly function */
#define m4f_inline_ m4f_missing_
#define m4f_optimize_ m4f_missing_
#define m4fcolon m4f_missing_

/** forth 'core ext' word set aliases */
#define m4ffalse m4fzero     /* false  */
#define m4ftrue m4fminus_one /* true   */
#define m4fr_fetch m4fi      /* r@     */

/** m64th-user aliases */
#define m4fr2nd_fetch m4fi_prime /* r2nd@ */
#define m4fr3rd_fetch m4fj       /* r3rd@ */

#define m4fchar_store m4fc_store
#define m4fchar_fetch m4fc_fetch               /* char@   alias for c@     - no dedicated m4func */
#define m4fcell_fetch m4ffetch                 /* cell@   alias for @      - no dedicated m4func */
#define m4fchar_store m4fc_store               /* char!   alias for c!     - no dedicated m4func */
#define m4fcell_store m4fstore                 /* cell!   alias for !      - no dedicated m4func */
#define m4ftoken_store CAT3(m4f_, SZt, _store) /*      token!        */
#define m4ftoken_store_1 CAT3(m4f_, SZt, _store_1)  /* token[1]!     */
#define m4ftoken_store_2 CAT3(m4f_, SZt, _store_2)  /* token[1]!     */
#define m4ftoken_store_3 CAT3(m4f_, SZt, _store_3)  /* token[1]!     */
#define m4ftoken_store_4 CAT3(m4f_, SZt, _store_4)  /* token[1]!     */
#define m4ftoken_store_5 CAT3(m4f_, SZt, _store_5)  /* token[1]!     */
#define m4ftoken_store_6 CAT3(m4f_, SZt, _store_6)  /* token[1]!     */
#define m4ftoken_store_7 CAT3(m4f_, SZt, _store_7)  /* token[1]!     */
#define m4ftoken_store_8 CAT3(m4f_, SZt, _store_8)  /* token[1]!     */
#define m4ftoken_fetch CAT3(m4f_, SZt, u_fetch)     /* token@        */
#define m4ftoken_fetch_1 CAT3(m4f_, SZt, u_fetch_1) /* token[1]      */
#define m4ftoken_fetch_2 CAT3(m4f_, SZt, u_fetch_2) /* token[2]      */
#define m4ftoken_fetch_3 CAT3(m4f_, SZt, u_fetch_3) /* token[3]      */
#define m4ftoken_fetch_4 CAT3(m4f_, SZt, u_fetch_4) /* token[4]      */
#define m4ftoken_fetch_5 CAT3(m4f_, SZt, u_fetch_5) /* token[5]      */
#define m4ftoken_fetch_6 CAT3(m4f_, SZt, u_fetch_6) /* token[6]      */
#define m4ftoken_fetch_7 CAT3(m4f_, SZt, u_fetch_7) /* token[7]      */
#define m4ftoken_fetch_8 CAT3(m4f_, SZt, u_fetch_8) /* token[8]      */

#define m4fone_byte m4fone           /* 1byte   */
#define m4fone_char m4fone           /* 1char   */
#define m4fone_short m4ftwo          /* 1short  */
#define m4fone_ushort m4ftwo         /* 1ushort */
#define m4fone_int m4ffour           /* 1int    */
#define m4fone_uint m4ffour          /* 1uint   */
#define m4fone_cell CAT2(m4f_, SZ)   /* 1cell   */
#define m4fone_token CAT2(m4f_, SZt) /* 1token  */

#define m4fbyte_plus m4fone_plus             /* byte+   */
#define m4fchar_plus m4fone_plus             /* char+   */
#define m4fshort_plus m4ftwo_plus            /* short+  */
#define m4fushort_plus m4ftwo_plus           /* ushort+ */
#define m4fint_plus m4ffour_plus             /* int+    */
#define m4fuint_plus m4ffour_plus            /* uint+   */
#define m4fcell_plus CAT3(m4f_, SZ, _plus)   /* cell+   */
#define m4ftoken_plus CAT3(m4f_, SZt, _plus) /* token+  */

#define m4fbytes m4fnoop                  /* bytes   */
#define m4fchars m4fnoop                  /* chars   */
#define m4fshorts m4ftwo_times            /* shorts  */
#define m4fushorts m4ftwo_times           /* ushorts */
#define m4fints m4ffour_times             /* ints    */
#define m4fuints m4ffour_times            /* uints   */
#define m4fcells CAT3(m4f_, SZ, _times)   /* cells   */
#define m4ftokens CAT3(m4f_, SZt, _times) /* tokens  */

#define m4ftoken_align CAT3(m4f_, SZt, _align)     /* token-align   */
#define m4ftoken_aligned CAT3(m4f_, SZt, _aligned) /* token-aligned */

#define m4fdiv_byte m4fnoop                /* /byte    =>      */
#define m4fdiv_char m4fnoop                /* /char    =>      */
#define m4fdiv_short m4ftwo_div            /* /short   => 2/   */
#define m4fdiv_ushort m4ftwo_div           /* /ushort  => 2/   */
#define m4fdiv_int m4ffour_div             /* /int     => 4/   */
#define m4fdiv_uint m4ffour_div            /* /uint    => 4/   */
#define m4fdiv_cell CAT3(m4f_, SZ, _div)   /* /cell    => SZ/  */
#define m4fdiv_token CAT3(m4f_, SZt, _div) /* /token   => SZt/ */

#define m4fto_token CAT3(m4f_to_, SZt, u) /* >token => >SZt   */

/* needed by m4fcell_plus, m4fcells, m4fdiv_cell, m4ftoken_plus, m4ftokens, m4fdiv_token above */
#define m4f_0 m4fzero              /* 0        */
#define m4f_1 m4fone               /* 1        */
#define m4f_2 m4ftwo               /* 2        */
#define m4f_3 m4fthree             /* 3        */
#define m4f_4 m4ffour              /* 4        */
#define m4f_8 m4feight             /* 8        */
#define m4f_1_times m4fnoop        /* 1*       */
#define m4f_2_times m4ftwo_times   /* 2*       */
#define m4f_4_times m4ffour_times  /* 4*       */
#define m4f_8_times m4feight_times /* 8*       */
#define m4f_2_plus m4ftwo_plus     /* 2+       */
#define m4f_4_plus m4ffour_plus    /* 4+       */
#define m4f_8_plus m4feight_plus   /* 8+       */
#define m4f_2_minus m4ftwo_minus   /* 2-       */
#define m4f_1_div m4fnoop          /* 1/       */
#define m4f_2_div m4ftwo_div       /* 2/       */
#define m4f_4_div m4ffour_div      /* 4/       */
#define m4f_8_div m4feight_div     /* 8/       */

/* needed by m4fto_token above */
#define m4f_to_1u m4fto_char
#define m4f_to_2u m4fto_ushort
#define m4f_to_4u m4fto_uint
#define m4f_to_8u m4fnoop

/* needed by m4ftoken_store* above */
#define m4f_1_store m4fc_store
#define m4f_2_store m4fshort_store
#define m4f_4_store m4fint_store
#define m4f_8_store m4fcell_store

#define m4f_1_store_1 m4fc_store_1
#define m4f_1_store_2 m4fc_store_2
#define m4f_1_store_3 m4fc_store_3
#define m4f_1_store_4 m4fc_store_4
#define m4f_1_store_5 m4fc_store_5
#define m4f_1_store_6 m4fc_store_6
#define m4f_1_store_7 m4fc_store_7
#define m4f_1_store_8 m4fc_store_8
#define m4f_2_store_1 m4fshort_store_1
#define m4f_2_store_2 m4fshort_store_2
#define m4f_2_store_3 m4fshort_store_3
#define m4f_2_store_4 m4fshort_store_4
#define m4f_2_store_5 m4fshort_store_5
#define m4f_2_store_6 m4fshort_store_6
#define m4f_2_store_7 m4fshort_store_7
#define m4f_2_store_8 m4fshort_store_8
#define m4f_4_store_1 m4fint_store_1
#define m4f_4_store_2 m4fint_store_2
#define m4f_4_store_3 m4fint_store_3
#define m4f_4_store_4 m4fint_store_4
#define m4f_4_store_5 m4fint_store_5
#define m4f_4_store_6 m4fint_store_6
#define m4f_4_store_7 m4fint_store_7
#define m4f_4_store_8 m4fint_store_8

#define m4f_8_store_1 m4fcell_store_1
#define m4f_8_store_2 m4fcell_store_2
#define m4f_8_store_3 m4fcell_store_3
#define m4f_8_store_4 m4fcell_store_4
#define m4f_8_store_5 m4fcell_store_5
#define m4f_8_store_6 m4fcell_store_6
#define m4f_8_store_7 m4fcell_store_7
#define m4f_8_store_8 m4fcell_store_8

/* needed by m4ftoken_fetch* above */
#define m4f_1u_fetch m4fchar_fetch
#define m4f_2u_fetch m4fushort_fetch
#define m4f_4u_fetch m4fuint_fetch
#define m4f_8u_fetch m4ffetch

#define m4f_2u_fetch_1 m4fushort_fetch_1
#define m4f_2u_fetch_2 m4fushort_fetch_2
#define m4f_2u_fetch_3 m4fushort_fetch_3
#define m4f_2u_fetch_4 m4fushort_fetch_4
#define m4f_2u_fetch_5 m4fushort_fetch_5
#define m4f_2u_fetch_6 m4fushort_fetch_6
#define m4f_2u_fetch_7 m4fushort_fetch_7
#define m4f_2u_fetch_8 m4fushort_fetch_8

/* needed by m4ftoken_align */
#define m4f_1_align m4fnoop
#define m4f_2_align m4fshort_align
#define m4f_4_align m4fint_align
#define m4f_8_align m4falign

/* needed by m4ftoken_aligned */
#define m4f_1_aligned m4fnoop
#define m4f_2_aligned m4fshort_aligned
#define m4f_4_aligned m4fint_aligned
#define m4f_8_aligned m4faligned

#define m4f_lit_tok_ CAT3(m4f_lit, SZt, s_)
#define m4f_lit_xt_ CAT3(m4f_lit, SZ, s_)

#define m4fd_to_s m4fdrop
#define m4fu_to_d m4fzero
#define m4fd_to_hi m4fnip

#endif /* M4TH_INCLUDE_FUNC_ALIAS_MH */
