/**
 * Copyright (C) 2020 Massimiliano Ghilardi
 *
 * This file is part of m64th.
 *
 * m64th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m64th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m64th.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef M64TH_INCLUDE_FUNC_MH
#define M64TH_INCLUDE_FUNC_MH

#include "align.mh" /* FUNC_ALIGN() */
#include "func_alias.mh"

#define FUNC(name) m6f##name
#define FUNC_RET(name) .L.FUNC(name).ret
#define ASMFUNC(name) m6f##name /* same as FUNC(name) */
#define ASMFUNC_RET(name) m6f##name##_ret

#define FUNC_DECL(name)                                                                            \
    .globl FUNC(name);                                                                             \
    .type FUNC(name), @function;

#define FUNC_DEF_NOALIGN(name)                                                                     \
    FUNC_DECL(name)                                                                                \
    FUNC(name) :

#define FUNC_DEF(name)                                                                             \
    FUNC_ALIGN()                                                                                   \
    FUNC_DECL(name)                                                                                \
    FUNC(name) :

#define FUNC_START(name) FUNC_DEF(name) /**/.cfi_startproc;
#define FUNC_START_NESTED(name) FUNC_DEF(name)

#define FUNC_SIZE(name) FUNC_RET(name) - FUNC(name)
#define ASMFUNC_SIZE(name) ASMFUNC_RET(name) - ASMFUNC(name)

#define FUNC_DEFSIZE(name) .size FUNC(name), .- FUNC(name);

#define FUNC_RAWEND(name)                                                                          \
    .cfi_endproc;                                                                                  \
    FUNC_DEFSIZE(name)

/* clang-format off */

#define FUNC_END(name)                                                                             \
    FUNC_RET(name) :                                                                               \
    NEXT()                                                                                         \
    FUNC_RAWEND(name)

#define FUNC_END_NESTED(name)                                                                      \
    FUNC_RET(name) :                                                                               \
    FUNC_DEFSIZE(name)


#define ASMFUNC_START(name)                                                                        \
    FUNC_DEF_NOALIGN(name)                                                                         \
    .cfi_startproc;

#define ASMFUNC_START_NESTED(name)                                                                 \
    FUNC_DEF_NOALIGN(name)

#define ASMFUNC_END(name)                                                                          \
    FUNC_RET(name) :                                                                               \
    ASMFUNC_RET(name) :                                                                            \
    FUNC_RAWEND(name)

#define ASMFUNC_END_NESTED(name)                                                                   \
    FUNC_RET(name) :                                                                               \
    ASMFUNC_RET(name) :                                                                            \
    FUNC_DEFSIZE(name)

/* clang-format on */

#endif /* M64TH_INCLUDE_FUNC_MH */
