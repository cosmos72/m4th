/**
 * Copyright (C) 2020 Massimiliano Ghilardi
 *
 * This file is part of m4th.
 *
 * m4th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m4th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m4th.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef M4TH_INCLUDE_TOKEN_ALIAS_MH
#define M4TH_INCLUDE_TOKEN_ALIAS_MH

#include "../dispatch/sz.mh" /* SZ SZt */
#include "macro.mh"          /* CAT3() */

/* -------------------------------------------------------------------------- */
/* m4token identifiers have lowercase prefix 'm4'                             */
/* -------------------------------------------------------------------------- */

#define m4_1s_comma m4c_comma
#define m4_2s_comma m4short_comma
#define m4_4s_comma m4int_comma
#define m4_8s_comma m4comma
#define m4token_comma CAT3(m4_, SZt, s_comma)
#define m4xt_comma CAT3(m4_, SZ, s_comma)

#define m4_lit_ /*     */ CAT3(m4_lit, SZt, s_)
#define m4_lit_short_ /*    */ m4_lit2s_
#define m4_lit_int_ /*      */ m4_lit4s_
#define m4_lit_cell_ /**/ CAT3(m4_lit, SZ, s_)

#define m4char_fetch m4c_fetch       /* char@   is an alias for c@     - no dedicated m4token */
#define m4cell_fetch m4fetch         /* cell@   is an alias for @      - no dedicated m4token */
#define m4byte_store m4c_store       /* byte!   is an alias for c!     - no dedicated m4token */
#define m4char_store m4c_store       /* char!   is an alias for c!     - no dedicated m4token */
#define m4ushort_store m4short_store /* ushort! is an alias for short! - no dedicated m4token */
#define m4uint_store m4int_store     /* uint!   is an alias for int!   - no dedicated m4token */

#define m4char_store_1 m4byte_store_1
#define m4char_store_2 m4byte_store_2
#define m4char_store_3 m4byte_store_3
#define m4char_store_4 m4byte_store_4
#define m4char_store_5 m4byte_store_5
#define m4char_store_6 m4byte_store_6
#define m4char_store_7 m4byte_store_7

#define m4ushort_store_1 m4short_store_1
#define m4ushort_store_2 m4short_store_2
#define m4ushort_store_3 m4short_store_3
#define m4ushort_store_4 m4short_store_4
#define m4ushort_store_5 m4short_store_5
#define m4ushort_store_6 m4short_store_6
#define m4ushort_store_7 m4short_store_7

#define m4uint_store_1 m4int_store_1
#define m4uint_store_2 m4int_store_2
#define m4uint_store_3 m4int_store_3
#define m4uint_store_4 m4int_store_4
#define m4uint_store_5 m4int_store_5
#define m4uint_store_6 m4int_store_6
#define m4uint_store_7 m4int_store_7

#define m4div_byte m4noop        /* /byte     divide dtop by sizeof(byte)   */
#define m4div_char m4noop        /* /char     divide dtop by sizeof(char)   */
#define m4div_short m4two_div    /* /short    divide dtop by sizeof(short)  */
#define m4div_ushort m4two_div   /* /ushort   divide dtop by sizeof(ushort) */
#define m4div_int m4four_div     /* /int      divide dtop by sizeof(short)  */
#define m4div_uint m4four_div    /* /uint     divide dtop by sizeof(ushort) */
#undef m4____gap                 /*                       */
#define m4one_byte m4one         /* 1byte     => 1        */
#define m4one_char m4one         /* 1char     => 1        */
#define m4one_short m4two        /* 1short    => 2        */
#define m4one_ushort m4two       /* 1ushort   => 2        */
#define m4one_int m4four         /* 1int      => 4        */
#define m4one_uint m4four        /* 1uint     => 4        */
#define m4one_cell CAT2(m4_, SZ) /* 1cell     => SZ       */
#undef m4____gap                 /*                       */
#define m4byte_plus m4one_plus   /* byte+     => 1+       */
#define m4short_plus m4two_plus  /* short+    => 2+       */
#define m4ushort_plus m4two_plus /* ushort+   => 2+       */
#define m4int_plus m4four_plus   /* int+      => 4+       */
#define m4uint_plus m4four_plus  /* uint+     => 4+       */
#undef m4____gap                 /*                       */
#define m4bytes m4noop           /* bytes     =>          */
#define m4shorts m4two_times     /* shorts    => 2*       */
#define m4ushorts m4two_times    /* ushorts   => 2*       */
#define m4ints m4four_times      /* ints      => 4*       */
#define m4uints m4four_times     /* uints     => 4*       */

#define m4_SZ_times CAT3(m4_, SZ, _times) /* _SZ*      needed by cells   */
#define m4_SZ_plus CAT3(m4_, SZ, _plus)   /* _SZ+      needed by cell+   */
#define m4_SZ_div CAT3(m4_, SZ, _div)     /* _SZ/      needed by /cell   */

#define m4div_cell CAT3(m4_, SZ, _div)           /* /cell         => _SZ/         */
#define m4div_token CAT3(m4_, SZt, _div)         /* /token        => _SZt/        */
#define m4to_token CAT3(m4_to_, SZt, u)          /* >token        => >SZt         */
#define m4token_store CAT3(m4_, SZt, u_store)    /* token!        => _SZtu_store  */
#define m4one_token CAT(m4_, SZt)                /* 1token        => _SZt         */
#define m4token_plus CAT3(m4_, SZt, _plus)       /* token+        => _SZt_plus    */
#define m4tokens CAT3(m4_, SZt, _times)          /* tokens        => _SZt_times   */
#define m4token_align CAT3(m4_, SZt, _align)     /* token-align   => _SZt_align   */
#define m4token_aligned CAT3(m4_, SZt, _aligned) /* token-aligned => _SZt_aligned */

#define m4token_fetch CAT3(m4_, SZt, u_fetch)     /* token@        => _SZtu_fetch  */
#define m4token_fetch_1 CAT3(m4_, SZt, u_fetch_1) /* token[1]      */
#define m4token_fetch_2 CAT3(m4_, SZt, u_fetch_2) /* token[2]      */
#define m4token_fetch_3 CAT3(m4_, SZt, u_fetch_3) /* token[3]      */
#define m4token_fetch_4 CAT3(m4_, SZt, u_fetch_4) /* token[4]      */
#define m4token_fetch_5 CAT3(m4_, SZt, u_fetch_5) /* token[5]      */
#define m4token_fetch_6 CAT3(m4_, SZt, u_fetch_6) /* token[6]      */
#define m4token_fetch_7 CAT3(m4_, SZt, u_fetch_7) /* token[7]      */
#define m4token_fetch_8 CAT3(m4_, SZt, u_fetch_8) /* token[8]      */

/*
 * needed by m4one_cell, m4cells, m4cell_plus, m4div_cell
 * and by m4one_token, m4tokens, m4token_plus, m4div_token above
 */
#define m4_0 m4zero              /* 0        */
#define m4_1 m4one               /* 1        */
#define m4_1_times m4noop        /* 1*       */
#define m4_1_div m4noop          /* 1/       */
#define m4_2 m4two               /* 2        */
#define m4_2_times m4two_times   /* 2*       */
#define m4_2_plus m4two_plus     /* 2+       */
#define m4_2_minus m4two_minus   /* 2-       */
#define m4_2_div m4two_div       /* 2/       */
#define m4_3 m4three             /* 3        */
#define m4_4 m4four              /* 4        */
#define m4_4_times m4four_times  /* 4*       */
#define m4_4_plus m4four_plus    /* 4+       */
#define m4_4_div m4four_div      /* 4/       */
#define m4_8 m4eight             /* 8        */
#define m4_8_times m4eight_times /* 8*       */
#define m4_8_plus m4eight_plus   /* 8+       */
#define m4_8_div m4eight_div     /* 8/       */

/* needed by m4to_token */
#define m4_to_1u m4to_char
#define m4_to_2u m4to_ushort
#define m4_to_4u m4to_uint
#define m4_to_8u m4noop

/* needed by m4token_store */
#define m4_1u_store m4c_store
#define m4_2u_store m4short_store
#define m4_4u_store m4int_store
#define m4_8u_store m4store

/* needed by m4token_fetch */
#define m4_1u_fetch m4char_fetch
#define m4_2u_fetch m4ushort_fetch
#define m4_4u_fetch m4uint_fetch
#define m4_8u_fetch m4fetch

#define m4_2u_fetch_1 m4ushort_fetch_1
#define m4_2u_fetch_2 m4ushort_fetch_2
#define m4_2u_fetch_3 m4ushort_fetch_3
#define m4_2u_fetch_4 m4ushort_fetch_4
#define m4_2u_fetch_5 m4ushort_fetch_5
#define m4_2u_fetch_6 m4ushort_fetch_6
#define m4_2u_fetch_7 m4ushort_fetch_7
#define m4_2u_fetch_8 m4ushort_fetch_8

/* needed by m4token_align */
#define m4_1_align m4noop
#define m4_2_align m4short_align
#define m4_4_align m4int_align
#define m4_8_align m4align

/* needed by m4token_aligned */
#define m4_1_aligned m4noop
#define m4_2_aligned m4short_aligned
#define m4_4_aligned m4int_aligned
#define m4_8_aligned m4aligned

#define m4cs_drop m4two_drop
#define m4cs_dup m4two_dup
#define m4cs_pick m4two_pick
#define m4cs_roll m4two_roll
#define m4minus_cs_roll m4minus_two_roll
#define m4cs_swap m4two_swap
#define m4minus_cs_rot m4minus_two_rot
#define m4cs_rot m4two_rot
#define m4r2nd_fetch m4i_prime

#define m4d_to_s m4drop
#define m4u_to_d m4zero

/* -------------------------------------------------------------------------- */
/* M4* numeric values have uppercase prefix 'M4'                              */
/* -------------------------------------------------------------------------- */

#define M4_1s_comma M4c_comma
#define M4_2s_comma M4short_comma
#define M4_4s_comma M4int_comma
#define M4_8s_comma M4comma
#define M4token_comma CAT3(M4_, SZt, s_comma)
#define M4xt_comma CAT3(M4_, SZ, s_comma)

#define M4_lit_ /*     */ CAT3(M4_lit, SZt, s_)
#define M4_lit_short_ /*    */ M4_lit2s_
#define M4_lit_int_ /*      */ M4_lit4s_
#define M4_lit_cell_ /**/ CAT3(M4_lit, SZ, s_)

#define M4div_byte M4noop        /* /byte     divide dtop by sizeof(byte)   */
#define M4div_char M4noop        /* /char     divide dtop by sizeof(char)   */
#define M4div_short M4two_div    /* /short    divide dtop by sizeof(short)  */
#define M4div_ushort M4two_div   /* /ushort   divide dtop by sizeof(ushort) */
#define M4div_int M4four_div     /* /int      divide dtop by sizeof(short)  */
#define M4div_uint M4four_div    /* /uint     divide dtop by sizeof(ushort) */
#undef M4____gap                 /*                       */
#define M4one_byte M4one         /* 1byte     => 1        */
#define M4one_char M4one         /* 1char     => 1        */
#define M4one_short M4two        /* 1short    => 2        */
#define M4one_ushort M4two       /* 1ushort   => 2        */
#define M4one_int M4four         /* 1int      => 4        */
#define M4one_uint M4four        /* 1uint     => 4        */
#define M4one_cell CAT2(M4_, SZ) /* 1cell     => SZ       */
#undef M4____gap                 /*                       */
#define M4byte_plus M4one_plus   /* byte+     => 1+       */
#define M4short_plus M4two_plus  /* short+    => 2+       */
#define M4ushort_plus M4two_plus /* ushort+   => 2+       */
#define M4int_plus M4four_plus   /* int+      => 4+       */
#define M4uint_plus M4four_plus  /* uint+     => 4+       */
#undef M4____gap                 /*                       */
#define M4bytes M4noop           /* bytes     =>          */
#define M4shorts M4two_times     /* shorts    => 2*       */
#define M4ushorts M4two_times    /* ushorts   => 2*       */
#define M4ints M4four_times      /* ints      => 4*       */
#define M4uints M4four_times     /* uints     => 4*       */

#define M4_SZ_times CAT3(M4_, SZ, _times) /* _SZ*      needed by cells   */
#define M4_SZ_plus CAT3(M4_, SZ, _plus)   /* _SZ+      needed by cell+   */
#define M4_SZ_div CAT3(M4_, SZ, _div)     /* _SZ/      needed by /cell   */

#define M4div_cell CAT3(M4_, SZ, _div)           /* /cell         => _SZ/         */
#define M4div_token CAT3(M4_, SZt, _div)         /* /token        => _SZt/        */
#define M4to_token CAT3(M4_to_, SZt, u)          /* >token        => >SZt         */
#define M4token_store CAT3(M4_, SZt, u_store)    /* token!        => _SZtu_store  */
#define M4one_token CAT2(M4_, SZt)               /* 1token        => _SZt         */
#define M4token_plus CAT3(M4_, SZt, _plus)       /* token+        => _SZt_plus    */
#define M4tokens CAT3(M4_, SZt, _times)          /* tokens        => _SZt_times   */
#define M4token_align CAT3(M4_, SZt, _align)     /* token-align   => _SZt_align   */
#define M4token_aligned CAT3(M4_, SZt, _aligned) /* token-aligned => _SZt_aligned */

#define M4token_fetch CAT3(M4_, SZt, u_fetch)     /* token@        => _SZtu_fetch  */
#define M4token_fetch_1 CAT3(M4_, SZt, u_fetch_1) /* token[1]      */
#define M4token_fetch_2 CAT3(M4_, SZt, u_fetch_2) /* token[2]      */
#define M4token_fetch_3 CAT3(M4_, SZt, u_fetch_3) /* token[3]      */
#define M4token_fetch_4 CAT3(M4_, SZt, u_fetch_4) /* token[4]      */
#define M4token_fetch_5 CAT3(M4_, SZt, u_fetch_5) /* token[5]      */
#define M4token_fetch_6 CAT3(M4_, SZt, u_fetch_6) /* token[6]      */
#define M4token_fetch_7 CAT3(M4_, SZt, u_fetch_7) /* token[7]      */
#define M4token_fetch_8 CAT3(M4_, SZt, u_fetch_8) /* token[8]      */

/*
 * needed by M4one_cell, M4cells, M4cell_plus, M4div_cell
 * and by M4one_token, M4tokens, M4token_plus, M4div_token above
 */
#define M4_0 M4zero              /* 0        */
#define M4_1 M4one               /* 1        */
#define M4_1_times M4noop        /* 1*       */
#define M4_1_div M4noop          /* 1/       */
#define M4_2 M4two               /* 2        */
#define M4_2_times M4two_times   /* 2*       */
#define M4_2_plus M4two_plus     /* 2+       */
#define M4_2_minus M4two_minus   /* 2-       */
#define M4_2_div M4two_div       /* 2/       */
#define M4_3 M4three             /* 3        */
#define M4_4 M4four              /* 4        */
#define M4_4_times M4four_times  /* 4*       */
#define M4_4_plus M4four_plus    /* 4+       */
#define M4_4_div M4four_div      /* 4/       */
#define M4_8 M4eight             /* 8        */
#define M4_8_times M4eight_times /* 8*       */
#define M4_8_plus M4eight_plus   /* 8+       */
#define M4_8_div M4eight_div     /* 8/       */

/* needed by M4to_token */
#define M4_to_1u M4to_char
#define M4_to_2u M4to_ushort
#define M4_to_4u M4to_uint
#define M4_to_8u M4noop

/* needed by M4token_store */
#define M4_1u_store M4c_store
#define M4_2u_store M4short_store
#define M4_4u_store M4int_store
#define M4_8u_store M4store

/* needed by M4token_fetch */
#define M4_1u_fetch M4char_fetch
#define M4_2u_fetch M4ushort_fetch
#define M4_4u_fetch M4uint_fetch
#define M4_8u_fetch M4fetch

#define M4_2u_fetch_1 M4ushort_fetch_1
#define M4_2u_fetch_2 M4ushort_fetch_2
#define M4_2u_fetch_3 M4ushort_fetch_3
#define M4_2u_fetch_4 M4ushort_fetch_4
#define M4_2u_fetch_5 M4ushort_fetch_5
#define M4_2u_fetch_6 M4ushort_fetch_6
#define M4_2u_fetch_7 M4ushort_fetch_7
#define M4_2u_fetch_8 M4ushort_fetch_8

/* needed by M4token_align */
#define M4_1_align M4noop
#define M4_2_align M4short_align
#define M4_4_align M4int_align
#define M4_8_align M4align

/* needed by M4token_aligned */
#define M4_1_aligned M4noop
#define M4_2_aligned M4short_aligned
#define M4_4_aligned M4int_aligned
#define M4_8_aligned M4aligned

#define M4cs_drop M4two_drop
#define M4cs_dup M4two_dup
#define M4cs_pick M4two_pick
#define M4cs_roll M4two_roll
#define M4minus_cs_roll M4minus_two_roll
#define M4cs_swap M4two_swap
#define M4minus_cs_rot M4minus_two_rot
#define M4cs_rot M4two_rot
#define M4r2nd_fetch M4i_prime

#define M4d_to_s M4drop
#define M4u_to_d M4zero

#endif /* M4TH_INCLUDE_TOKEN_ALIAS_MH */
