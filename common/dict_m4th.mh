/**
 * This file is part of m4th.
 *
 * m4th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m4th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m4th.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef M4TH_COMMON_DICT_M4TH_MH
#define M4TH_COMMON_DICT_M4TH_MH

#define DICT_WORDS_M4TH_USER(X)                                                                    \
    /* X(2, "*!", times_store)  TODO */                                                            \
    /* X(2, "-!", minus_store) TODO */                                                             \
    X(2, "<=", less_equal)                                                                         \
    X(2, ">=", more_equal)                                                                         \
    X(3, "0<=", zero_less_equal)                                                                   \
    X(3, "0>=", zero_more_equal)

#define DICT_WORDS_M4TH_CORE(X) /* currently empty */

#define DICT_WORDS_M4TH_IMPL(X)                                                                    \
    X(5, "(?do)", _question_do_)                                                                   \
    X(6, "(call)", _call_)                                                                         \
    X(12, "(compile-2s,)", _compile2s_)                                                            \
    X(12, "(compile-4s,)", _compile4s_)                                                            \
    X(12, "(compile-8s,)", _compile8s_)                                                            \
    X(4, "(do)", _do_)                                                                             \
    X(6, "(else)", _else_)                                                                         \
    X(4, "(if)", _if_)                                                                             \
    X(8, "(inline)", _inline_)                                                                     \
    X(6, "(jump)", _jump_)                                                                         \
    X(7, "(leave)", _leave_)                                                                       \
    X(12, "(literal-2s)", _literal2s_)                                                             \
    X(12, "(literal-4s)", _literal4s_)                                                             \
    X(12, "(literal-8s)", _literal8s_)                                                             \
    X(6, "(loop)", _loop_)                                                                         \
    X(10, "(optimize)", _optimize_)                                                                \
    X(2, "-1", minus_one)                                                                          \
    X(1, "0", zero)                                                                                \
    X(1, "1", one)                                                                                 \
    X(1, "2", two)                                                                                 \
    X(2, "2+", two_plus)                                                                           \
    X(2, "2-", two_minus)                                                                          \
    X(1, "3", three)                                                                               \
    X(1, "4", four)                                                                                \
    X(2, "4*", four_times)                                                                         \
    X(2, "4+", four_plus)                                                                          \
    X(1, "8", eight)                                                                               \
    X(2, "8*", eight_times)                                                                        \
    X(2, "8+", eight_plus)                                                                         \
    X(2, "i'", i_prime)                                                                            \
    X(2, "i*", i_times)                                                                            \
    X(2, "i+", i_plus)                                                                             \
    X(2, "i-", i_minus)                                                                            \
    X(4, "noop", noop)

#define DICT_WORDS_M4TH(X) DICT_WORDS_M4TH_USER(X) DICT_WORDS_M4TH_CORE(X) DICT_WORDS_M4TH_IMPL(X)

#endif /* M4TH_COMMON_DICT_M4TH_MH */
