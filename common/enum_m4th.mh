/**
 * This file is part of m4th.
 *
 * m4th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m4th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m4th.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef M4TH_COMMON_ENUM_M4TH_MH
#define M4TH_COMMON_ENUM_M4TH_MH

/* 'm4th-user' wordlist */
#define M4zero_less_equal 501 /* 0<=      */
#define M4zero_more_equal 502 /* 0>=      */
#define M4less_equal 503      /* <=       */
#define M4more_equal 504      /* >=       */

/* 'm4th-impl' wordlist */
#define M4minus_one 510   /* -1       */
#define M4zero 511        /* 0        */
#define M4one 512         /* 1        */
#define M4two 513         /* 2        */
#define M4two_plus 514    /* 2+       */
#define M4two_minus 515   /* 2-       */
#define M4three 516       /* 3        */
#define M4four 517        /* 4        */
#define M4four_times 518  /* 4*       */
#define M4four_plus 519   /* 4+       */
#define M4eight 520       /* 8        */
#define M4eight_times 521 /* 8*       */
#define M4eight_plus 522  /* 8+       */

/* WARNING: numeric values under this line are subject to change */

/* (?do) must be followed by IP offset of 1st instruction after (loop) */
#define M4_question_do_ 530
#define M4_missing_ 0     /* (missing) called instead of invalid/unimplemented function */
#define M4_call_ 531      /* (call) must be followed by XT */
#define M4_compile2s_ 532 /* (compile2s,) append int16 to compiled code  */
#define M4_compile4s_ 533 /* (compile4s,) append int32 to compiled code  */
#define M4_compile8s_ 534 /* (compile8s,) append int64 to compiled code  */
#define M4_do_ 535        /* (do)         */
#define M4_jump_ 536      /* (jump)   must be followed by IP offset */
#define M4_else_ 537      /* (else)   must be followed by IP offset */
#define M4_if_ 538        /* (if)     must be followed by IP offset */
#define M4_inline_ 539    /* (inline) try to inline calls in word being compiled */
#define M4_literal2s_ 540 /* (literal-2s)  must be followed by int16, pushes it to dstack */
#define M4_literal4s_ 541 /* (literal-4s)  must be followed by int32, pushes it to dstack */
#define M4_literal8s_ 542 /* (literal-8s)  must be followed by int64, pushes it to dstack */
#define M4_leave_ 543    /* (leave) must be followed by IP offset of 1st instruction after (loop) */
#define M4_loop_ 544     /* (loop)  must be followed by IP offset of 1st instruction after (do)   */
#define M4_optimize_ 545 /* (optimize) try to optimize word being compiled */
#undef M4____gap         /*          */
#define M4i_prime 550    /* i'       */
#define M4i_times 551    /* i*       */
#define M4i_plus 552     /* i+       */
#define M4i_minus 553    /* i-       */
#define M4noop 554       /* noop     */

#define M4____end 555

#endif /* M4TH_COMMON_ENUM_M4TH_MH */
