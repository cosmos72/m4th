/**
 * Copyright (C) 2020 Massimiliano Ghilardi
 *
 * This file is part of m64th.
 *
 * m64th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m64th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m64th.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef M6TH_DISPATCH_ASM_MH
#define M6TH_DISPATCH_ASM_MH

#if defined(__x86_64__)
#include "../amd64/asm.mh"
#elif defined(__aarch64__)
#include "../arm64/asm.mh"
#else
#error "unsupported architecture: expecting amd64 or arm64"
#endif

#ifdef R000
#define init_R000_REG1()
#define R000_REG1 R000
#define R000_REG1b R000b
#define R000_REG1h R000h
#define R000_REG1w R000w
#define R000_REG1t R000t
#else
#define init_R000_REG1() ZERO(REG1)
#define R000_REG1 REG1
#define R000_REG1b REG1b
#define R000_REG1h REG1h
#define R000_REG1w REG1w
#define R000_REG1t REG1t
#endif

#ifdef RFFF
#define IMM_1 RFFF /* immediate constant -1 */
#define MOVI(val, reg) ADDI(RFFF, (val) + 1, reg)
#define init_RFFF_REG2()
#define RFFF_REG2 RFFF
#define RFFF_REG2b RFFFb
#define RFFF_REG2h RFFFh
#define RFFF_REG2w RFFFw
#define RFFF_REG2t RFFFt
#else
#define IMM_1 IMM(-1) /* immediate constant -1 */
#define MOVI(val, reg) MOVE(IMM(val), reg)
#define init_RFFF_REG2() MOVE(IMM_1, REG2)
#define RFFF_REG2 REG2
#define RFFF_REG2b REG2b
#define RFFF_REG2h REG2h
#define RFFF_REG2w REG2w
#define RFFF_REG2t REG2t
#endif

#endif /* M6TH_DISPATCH_ASM_MH */
