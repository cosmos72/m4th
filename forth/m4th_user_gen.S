/**
 * Copyright (C) 2020 Massimiliano Ghilardi
 *
 * This file is part of m4th.
 *
 * m4th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m4th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m4th.  If not, see <https://www.gnu.org/licenses/>.
 */

/* clang-format off */

/*
 * generated by command "m4th < forth/m4th_user.forth"
 * with some manual fixes to stack effects and flags
 */

WORD_START(clearstack, LASTWORD)
    WORD_DSTACK(-1,0)
    WORD_RSTACK(0,0)
    WORD_STACK_NONE()
    WORD_NATIVE_NONE()
    WORD_FLAGS(M4FLAG_INLINE|M4FLAG_PURE)
    WORD_CODE_AND_DATA(clearstack,
        WORD_CODE_TOKENS(
            /*3*/ depth, n_to_drop, exit
        ),
    )
WORD_END(clearstack)
WORD_START(wordlist_upto_name, clearstack)
    WORD_DSTACK(2,-1)
    WORD_RSTACK(0,0)
    WORD_STACK_NONE()
    WORD_NATIVE_NONE()
    WORD_FLAGS(M4FLAG_INLINE)
    WORD_CODE_AND_DATA(wordlist_upto_name,
        WORD_CODE_TOKENS(
            /*24*/ to_r, wordlist_last_name, zero, swap, begin, dup, _while_, T(12), swap, one_plus, over, dup, r_fetch, ne, _while_, T(3), name_to_prev, _repeat_, T(-14), then, drop, r_from, drop, exit
        ),
    )
WORD_END(wordlist_upto_name)
WORD_START(disassemble_names, wordlist_upto_name)
    WORD_DSTACK(-1,0)
    WORD_RSTACK(0,0)
    WORD_STACK_NONE()
    WORD_NATIVE_NONE()
    WORD_FLAGS(M4FLAG_INLINE)
    WORD_CODE_AND_DATA(disassemble_names,
        WORD_CODE_TOKENS(
            /*11*/ zero, _q_do_, T(7), CALL(disassemble_name), _loop_, T(-7), exit
        ),
    )
WORD_END(disassemble_names)
WORD_START(disassemble_upto, disassemble_names)
    WORD_STACK_NONE()
    WORD_STACK_NONE()
    WORD_NATIVE_NONE()
    WORD_FLAGS(M4FLAG_INLINE)
    WORD_CODE_AND_DATA(disassemble_upto,
        WORD_CODE_TOKENS(
            /*18*/ CALL(parse_nt), drop, swap, CALL(wordlist_upto_name), CALL(disassemble_names), exit
        ),
    )
WORD_END(disassemble_upto)

#undef LASTWORD
#define LASTWORD disassemble_upto
