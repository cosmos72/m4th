/**
 * Copyright (C) 2020 Massimiliano Ghilardi
 *
 * This file is part of m4th.
 *
 * m4th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m4th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m4th.  If not, see <https://www.gnu.org/licenses/>.
 */

/* clang-format off */

/*
 * generated by command "m4th < forth/forth_searchorder.forth"
 * with some manual fixes to stack effects and flags
 */

/* replace first wordlist in search order with forth wordlist ( SO: wid -- forth ) */
WORD_START(forth,          LASTWORD)
    WORD_DSTACK(0,0)
    WORD_RSTACK(0,0)
    WORD_STACK_NONE()
    WORD_NATIVE_NONE()
    WORD_FLAGS(M4FLAG_INLINE)
    WORD_CODE(
        /*6*/ CALL(forth_wordlist), searchorder_store_0, exit
    )
WORD_END(forth)
WORD_START(get_order, forth)
    WORD_DSTACK(0,-1)
    WORD_RSTACK(0,0)
    WORD_STACK_NONE()
    WORD_NATIVE_NONE()
    WORD_FLAGS(M4FLAG_INLINE)
    WORD_CODE_AND_DATA(get_order,
        WORD_CODE_TOKENS(
            /*13*/ searchorder_depth, zero, _q_do_, T(7), i_prime, i, minus, one_minus, searchorder_pick, _loop_, T(-7), searchorder_depth, exit
        ),
    )
WORD_END(get_order)
WORD_START(order, get_order)
    WORD_DSTACK(0,0)
    WORD_RSTACK(0,0)
    WORD_STACK_NONE()
    WORD_NATIVE_NONE()
    WORD_FLAGS(M4FLAG_INLINE)
    WORD_CODE_AND_DATA(order,
        WORD_CODE_TOKENS(
            /*24*/ CALL(get_order), zero, _q_do_, T(6), bl, emit, wordlist_to_string, type, _loop_, T(-6), four, CALL(spaces), get_current, wordlist_to_string, type, exit
        ),
    )
WORD_END(order)
WORD_START(set_order, order)
    WORD_DSTACK(-1, 0)
    WORD_RSTACK(0, 0)
    WORD_STACK_NONE()
    WORD_NATIVE_NONE()
    WORD_FLAGS(0)
    WORD_CODE_AND_DATA(set_order,
        WORD_CODE_TOKENS(
            /*29*/ dup, zero_less, _if_, T(8), drop, CALL(only), exit, then, searchorder_clear, dup_to_r, zero, _q_do_, T(9), i_prime, i, minus, one_minus, pick, searchorder_dup, searchorder_store_0, _loop_, T(-9), r_from, n_to_drop, exit
        ),
    )
WORD_END(set_order)

#undef LASTWORD
#define LASTWORD set_order
