/**
 * Copyright (C) 2020 Massimiliano Ghilardi
 *
 * This file is part of m64th.
 *
 * m64th is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * m64th is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with m64th.  If not, see <https://www.gnu.org/licenses/>.
 */

/* clang-format off */

/*
 * generated by command "m64th < forth/forth_searchorder.forth"
 * with some manual fixes to stack effects and flags
 */

WORD_START(definitions, LASTWORD)
    WORD_STACK_NONE()
    WORD_STACK_NONE()
    WORD_ASM_NONE()
    WORD_FLAGS(M4FLAG_INLINE)
    WORD_CODE_AND_DATA(definitions,
        WORD_CODE_TOKENS(
            /*4*/ zero, searchorder_pick, set_current, exit
        ),
    )
WORD_END(definitions)
WORD_START(only, definitions)
    WORD_STACK_NONE()
    WORD_STACK_NONE()
    WORD_ASM_NONE()
    WORD_FLAGS(M4FLAG_INLINE)
    WORD_CODE_AND_DATA(only,
        WORD_CODE_TOKENS(
            /*9*/ searchorder_clear, searchorder_dup, _lit_cell_, CELL(m4wordlist_forth_root), searchorder_store_0, exit
        ),
    )
WORD_END(only)
WORD_START(previous, only)
    WORD_STACK_NONE()
    WORD_STACK_NONE()
    WORD_ASM_NONE()
    WORD_FLAGS(M4FLAG_INLINE)
    WORD_CODE_AND_DATA(previous,
        WORD_CODE_TOKENS(
            /*2*/ searchorder_drop, exit
        ),
    )
WORD_END(previous)
WORD_START(search_wordlist,    previous)
    WORD_DSTACK(3,-1)
    WORD_RSTACK(0,0)
    WORD_STACK_NONE()
    WORD_ASM_NONE()
    WORD_FLAGS(M4FLAG_INLINE|M4FLAG_MEM_FETCH)
    WORD_CODE_AND_DATA(search_wordlist,
        WORD_CODE_TOKENS(
            /*16*/ CALL(wordlist_find), dup, _if_, T(5), swap, name_to_xt, swap, _else_, T(2), nip, then, exit
        ),
    )
WORD_END(search_wordlist)

#undef LASTWORD
#define LASTWORD search_wordlist
